Terminals unused in grammar

    BREAK
    CASE
    CONTINUE
    DEFAULT
    DO
    ELSE
    FOR
    GOTO
    IF
    RETURN
    SWITCH
    WHILE


State 215 conflicts: 1 shift/reduce


Grammar

    0 $accept: declaration_or_fndef $end

    1 declaration_or_fndef: declaration
    2                     | function_definition

    3 function_definition: declarator compound_statement

    4 compound_statement: '{' decl_or_stmt_list '}'

    5 decl_or_stmt_list: decl_or_stmt
    6                  | decl_or_stmt_list decl_or_stmt

    7 decl_or_stmt: declaration
    8             | stmt

    9 stmt: compound_statement
   10     | expression ';'

   11 primary-expression: IDENT
   12                   | NUMBER
   13                   | STRING
   14                   | CHARLIT
   15                   | '(' expression ')'

   16 postfix-expression: primary-expression
   17                   | postfix-expression '[' expression ']'
   18                   | postfix-expression '.' IDENT
   19                   | postfix-expression INDSEL IDENT
   20                   | postfix-expression '(' expression-list ')'
   21                   | postfix-expression '(' ')'
   22                   | postfix-expression PLUSPLUS
   23                   | postfix-expression MINUSMINUS

   24 expression-list: assignment-expression
   25                | expression-list ',' assignment-expression

   26 unary-expression: postfix-expression
   27                 | PLUSPLUS unary-expression
   28                 | MINUSMINUS unary-expression
   29                 | unary-operator cast-expression
   30                 | SIZEOF '(' expression ')'

   31 unary-operator: '-'
   32               | '+'
   33               | '!'
   34               | '~'
   35               | '&'
   36               | '*'

   37 cast-expression: unary-expression
   38                | SIZEOF '(' type-name ')'

   39 mult-expression: cast-expression
   40                | mult-expression '*' cast-expression
   41                | mult-expression '/' cast-expression
   42                | mult-expression '%' cast-expression

   43 add-expression: mult-expression
   44               | add-expression '+' mult-expression
   45               | add-expression '-' mult-expression

   46 shift-expression: add-expression
   47                 | shift-expression SHL add-expression
   48                 | shift-expression SHR add-expression

   49 relational-expression: shift-expression
   50                      | relational-expression '<' shift-expression
   51                      | relational-expression LTEQ shift-expression
   52                      | relational-expression '>' shift-expression
   53                      | relational-expression GTEQ shift-expression

   54 equality-expression: relational-expression
   55                    | equality-expression EQEQ relational-expression
   56                    | equality-expression NOTEQ relational-expression

   57 bitwise-or-expression: bitwise-xor-expression
   58                      | bitwise-or-expression '|' bitwise-xor-expression

   59 bitwise-xor-expression: bitwise-and-expression
   60                       | bitwise-xor-expression '^' bitwise-and-expression

   61 bitwise-and-expression: equality-expression
   62                       | bitwise-and-expression '&' equality-expression

   63 logical-or-expression: logical-and-expression
   64                      | logical-or-expression LOGOR logical-and-expression

   65 logical-and-expression: bitwise-or-expression
   66                       | logical-and-expression LOGAND bitwise-or-expression

   67 conditional-expression: logical-or-expression
   68                       | logical-or-expression '?' expression ':' conditional-expression

   69 assignment-expression: conditional-expression
   70                      | unary-expression assignment-operator assignment-expression

   71 assignment-operator: '='
   72                    | PLUSEQ
   73                    | MINUSEQ
   74                    | TIMESEQ
   75                    | DIVEQ
   76                    | MODEQ
   77                    | SHLEQ
   78                    | SHREQ
   79                    | ANDEQ
   80                    | OREQ
   81                    | XOREQ

   82 expression: assignment-expression
   83           | expression ',' assignment-expression

   84 declaration: declaration-specifiers init-declarator-list ';'
   85            | declaration-specifiers ';'

   86 declaration-specifiers: storage-class-specifier declaration-specifiers
   87                       | storage-class-specifier
   88                       | type-specifier declaration-specifiers
   89                       | type-specifier
   90                       | type-qualifier declaration-specifiers
   91                       | type-qualifier
   92                       | function-specifier declaration-specifiers
   93                       | function-specifier

   94 init-declarator-list: init-declarator
   95                     | init-declarator-list ',' init-declarator

   96 init-declarator: declarator
   97                | declarator '=' initializer

   98 storage-class-specifier: TYPEDEF
   99                        | EXTERN
  100                        | STATIC
  101                        | AUTO
  102                        | REGISTER

  103 type-specifier: VOID
  104               | CHAR
  105               | SHORT
  106               | INT
  107               | LONG
  108               | FLOAT
  109               | DOUBLE
  110               | SIGNED
  111               | UNSIGNED
  112               | _BOOL
  113               | _COMPLEX
  114               | _IMAGINARY
  115               | struct-or-union-specifier
  116               | enum-specifier

  117 struct-or-union-specifier: struct-or-union IDENT '{' struct-declaration-list '}'
  118                          | struct-or-union '{' struct-declaration-list '}'
  119                          | struct-or-union IDENT

  120 struct-or-union: STRUCT
  121                | UNION

  122 struct-declaration-list: struct-declaration
  123                        | struct-declaration-list struct-declaration

  124 struct-declaration: specifier-qualifier-list struct-declarator-list

  125 specifier-qualifier-list: type-specifier specifier-qualifier-list
  126                         | type-specifier
  127                         | type-qualifier specifier-qualifier-list
  128                         | type-qualifier

  129 struct-declarator-list: struct-declarator
  130                       | struct-declarator-list ',' struct-declarator

  131 struct-declarator: declarator
  132                  | declarator ':' conditional-expression
  133                  | ':' conditional-expression

  134 enum-specifier: ENUM IDENT '{' enumerator-list '}'
  135               | ENUM '{' enumerator-list ',' '}'
  136               | ENUM IDENT

  137 enumerator-list: enumerator
  138                | enumerator-list ',' enumerator

  139 enumerator: IDENT
  140           | IDENT '=' conditional-expression

  141 type-qualifier: CONST
  142               | RESTRICT
  143               | VOLATILE

  144 function-specifier: INLINE

  145 declarator: pointer direct-declarator
  146           | direct-declarator

  147 direct-declarator: IDENT
  148                  | '(' declarator ')'
  149                  | direct-declarator '[' type-qualifier-list assignment-expression ']'
  150                  | direct-declarator '[' STATIC type-qualifier-list assignment-expression ']'
  151                  | direct-declarator '[' STATIC assignment-expression ']'
  152                  | direct-declarator '[' type-qualifier-list STATIC assignment-expression ']'
  153                  | direct-declarator '[' type-qualifier-list '*' ']'
  154                  | direct-declarator '[' '*' ']'
  155                  | direct-declarator '[' ']'
  156                  | direct-declarator '(' parameter-type-list ')'
  157                  | direct-declarator '(' identifier-list ')'
  158                  | direct-declarator '(' ')'

  159 pointer: '*'
  160        | '*' type-qualifier-list
  161        | '*' type-qualifier-list pointer
  162        | '*' pointer

  163 type-qualifier-list: type-qualifier
  164                    | type-qualifier-list type-qualifier

  165 parameter-type-list: parameter-list
  166                    | parameter-list ',' ELLIPSIS

  167 parameter-list: parameter-declaration
  168               | parameter-list ',' parameter-declaration

  169 parameter-declaration: declaration-specifiers declarator
  170                      | declaration-specifiers abstract-declarator
  171                      | declaration-specifiers

  172 identifier-list: IDENT
  173                | identifier-list ',' IDENT

  174 type-name: specifier-qualifier-list
  175          | specifier-qualifier-list abstract-declarator

  176 abstract-declarator: pointer
  177                    | pointer direct-abstract-declarator
  178                    | direct-abstract-declarator

  179 direct-abstract-declarator: '(' abstract-declarator ')'
  180                           | direct-abstract-declarator '[' assignment-expression ']'
  181                           | direct-abstract-declarator '[' ']'
  182                           | '[' assignment-expression ']'
  183                           | direct-abstract-declarator '[' '*' ']'
  184                           | '[' '*' ']'
  185                           | direct-abstract-declarator '(' parameter-type-list ')'
  186                           | '(' parameter-type-list ')'
  187                           | direct-abstract-declarator '(' ')'

  188 initializer: assignment-expression
  189            | '{' initializer-list '}'
  190            | '{' initializer ',' '}'

  191 initializer-list: designation initializer
  192                 | initializer
  193                 | initializer-list ',' designation initializer
  194                 | initializer-list ',' initializer

  195 designation: designator-list '='

  196 designator-list: designator
  197                | designator-list designator

  198 designator: '[' conditional-expression ']'
  199           | '.' IDENT


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 33
    '%' (37) 42
    '&' (38) 35 62
    '(' (40) 15 20 21 30 38 148 156 157 158 179 185 186 187
    ')' (41) 15 20 21 30 38 148 156 157 158 179 185 186 187
    '*' (42) 36 40 153 154 159 160 161 162 183 184
    '+' (43) 32 44
    ',' (44) 25 83 95 130 135 138 166 168 173 190 193 194
    '-' (45) 31 45
    '.' (46) 18 199
    '/' (47) 41
    ':' (58) 68 132 133
    ';' (59) 10 84 85
    '<' (60) 50
    '=' (61) 71 97 140 195
    '>' (62) 52
    '?' (63) 68
    '[' (91) 17 149 150 151 152 153 154 155 180 181 182 183 184 198
    ']' (93) 17 149 150 151 152 153 154 155 180 181 182 183 184 198
    '^' (94) 60
    '{' (123) 4 117 118 134 135 189 190
    '|' (124) 58
    '}' (125) 4 117 118 134 135 189 190
    '~' (126) 34
    error (256)
    IDENT <string_literal> (258) 11 18 19 117 119 134 136 139 140 147 172 173 199
    CHARLIT <charlit> (259) 14
    STRING <string_literal> (260) 13
    NUMBER <num> (261) 12
    INDSEL (262) 19
    PLUSPLUS (263) 22 27
    MINUSMINUS (264) 23 28
    SHL (265) 47
    SHR (266) 48
    LTEQ (267) 51
    GTEQ (268) 53
    EQEQ (269) 55
    NOTEQ (270) 56
    LOGAND (271) 66
    LOGOR (272) 64
    ELLIPSIS (273) 166
    TIMESEQ (274) 74
    DIVEQ (275) 75
    MODEQ (276) 76
    PLUSEQ (277) 72
    MINUSEQ (278) 73
    SHLEQ (279) 77
    SHREQ (280) 78
    ANDEQ (281) 79
    OREQ (282) 80
    XOREQ (283) 81
    AUTO (284) 101
    BREAK (285)
    CASE (286)
    CHAR (287) 104
    CONST (288) 141
    CONTINUE (289)
    DEFAULT (290)
    DO (291)
    DOUBLE (292) 109
    ELSE (293)
    ENUM (294) 134 135 136
    EXTERN (295) 99
    FLOAT (296) 108
    FOR (297)
    GOTO (298)
    IF (299)
    INLINE (300) 144
    INT (301) 106
    LONG (302) 107
    REGISTER (303) 102
    RESTRICT (304) 142
    RETURN (305)
    SHORT (306) 105
    SIGNED (307) 110
    SIZEOF (308) 30 38
    STATIC (309) 100 150 151 152
    STRUCT (310) 120
    SWITCH (311)
    TYPEDEF (312) 98
    UNION (313) 121
    UNSIGNED (314) 111
    VOID (315) 103
    VOLATILE (316) 143
    WHILE (317)
    _BOOL (318) 112
    _COMPLEX (319) 113
    _IMAGINARY (320) 114


Nonterminals, with rules where they appear

    $accept (90)
        on left: 0
    declaration_or_fndef (91)
        on left: 1 2
        on right: 0
    function_definition (92)
        on left: 3
        on right: 2
    compound_statement (93)
        on left: 4
        on right: 3 9
    decl_or_stmt_list (94)
        on left: 5 6
        on right: 4 6
    decl_or_stmt (95)
        on left: 7 8
        on right: 5 6
    stmt (96)
        on left: 9 10
        on right: 8
    primary-expression <astnode_p> (97)
        on left: 11 12 13 14 15
        on right: 16
    postfix-expression <astnode_p> (98)
        on left: 16 17 18 19 20 21 22 23
        on right: 17 18 19 20 21 22 23 26
    expression-list <astnode_p> (99)
        on left: 24 25
        on right: 20 25
    unary-expression <astnode_p> (100)
        on left: 26 27 28 29 30
        on right: 27 28 37 70
    unary-operator <op> (101)
        on left: 31 32 33 34 35 36
        on right: 29
    cast-expression <astnode_p> (102)
        on left: 37 38
        on right: 29 39 40 41 42
    mult-expression <astnode_p> (103)
        on left: 39 40 41 42
        on right: 40 41 42 43 44 45
    add-expression <astnode_p> (104)
        on left: 43 44 45
        on right: 44 45 46 47 48
    shift-expression <astnode_p> (105)
        on left: 46 47 48
        on right: 47 48 49 50 51 52 53
    relational-expression <astnode_p> (106)
        on left: 49 50 51 52 53
        on right: 50 51 52 53 54 55 56
    equality-expression <astnode_p> (107)
        on left: 54 55 56
        on right: 55 56 61 62
    bitwise-or-expression <astnode_p> (108)
        on left: 57 58
        on right: 58 65 66
    bitwise-xor-expression <astnode_p> (109)
        on left: 59 60
        on right: 57 58 60
    bitwise-and-expression <astnode_p> (110)
        on left: 61 62
        on right: 59 60 62
    logical-or-expression <astnode_p> (111)
        on left: 63 64
        on right: 64 67 68
    logical-and-expression <astnode_p> (112)
        on left: 65 66
        on right: 63 64 66
    conditional-expression <astnode_p> (113)
        on left: 67 68
        on right: 68 69 132 133 140 198
    assignment-expression <astnode_p> (114)
        on left: 69 70
        on right: 24 25 70 82 83 149 150 151 152 180 182 188
    assignment-operator <op> (115)
        on left: 71 72 73 74 75 76 77 78 79 80 81
        on right: 70
    expression <astnode_p> (116)
        on left: 82 83
        on right: 10 15 17 30 68 83
    declaration (117)
        on left: 84 85
        on right: 1 7
    declaration-specifiers (118)
        on left: 86 87 88 89 90 91 92 93
        on right: 84 85 86 88 90 92 169 170 171
    init-declarator-list (119)
        on left: 94 95
        on right: 84 95
    init-declarator (120)
        on left: 96 97
        on right: 94 95
    storage-class-specifier (121)
        on left: 98 99 100 101 102
        on right: 86 87
    type-specifier (122)
        on left: 103 104 105 106 107 108 109 110 111 112 113 114 115 116
        on right: 88 89 125 126
    struct-or-union-specifier (123)
        on left: 117 118 119
        on right: 115
    struct-or-union (124)
        on left: 120 121
        on right: 117 118 119
    struct-declaration-list (125)
        on left: 122 123
        on right: 117 118 123
    struct-declaration (126)
        on left: 124
        on right: 122 123
    specifier-qualifier-list (127)
        on left: 125 126 127 128
        on right: 124 125 127 174 175
    struct-declarator-list (128)
        on left: 129 130
        on right: 124 130
    struct-declarator (129)
        on left: 131 132 133
        on right: 129 130
    enum-specifier (130)
        on left: 134 135 136
        on right: 116
    enumerator-list (131)
        on left: 137 138
        on right: 134 135 138
    enumerator (132)
        on left: 139 140
        on right: 137 138
    type-qualifier (133)
        on left: 141 142 143
        on right: 90 91 127 128 163 164
    function-specifier (134)
        on left: 144
        on right: 92 93
    declarator (135)
        on left: 145 146
        on right: 3 96 97 131 132 148 169
    direct-declarator (136)
        on left: 147 148 149 150 151 152 153 154 155 156 157 158
        on right: 145 146 149 150 151 152 153 154 155 156 157 158
    pointer (137)
        on left: 159 160 161 162
        on right: 145 161 162 176 177
    type-qualifier-list (138)
        on left: 163 164
        on right: 149 150 152 153 160 161 164
    parameter-type-list (139)
        on left: 165 166
        on right: 156 185 186
    parameter-list (140)
        on left: 167 168
        on right: 165 166 168
    parameter-declaration (141)
        on left: 169 170 171
        on right: 167 168
    identifier-list (142)
        on left: 172 173
        on right: 157 173
    type-name (143)
        on left: 174 175
        on right: 38
    abstract-declarator (144)
        on left: 176 177 178
        on right: 170 175 179
    direct-abstract-declarator (145)
        on left: 179 180 181 182 183 184 185 186 187
        on right: 177 178 180 181 183 185 187
    initializer (146)
        on left: 188 189 190
        on right: 97 190 191 192 193 194
    initializer-list (147)
        on left: 191 192 193 194
        on right: 189 193 194
    designation (148)
        on left: 195
        on right: 191 193
    designator-list (149)
        on left: 196 197
        on right: 195 197
    designator (150)
        on left: 198 199
        on right: 196 197


State 0

    0 $accept: • declaration_or_fndef $end

    IDENT       shift, and go to state 1
    AUTO        shift, and go to state 2
    CHAR        shift, and go to state 3
    CONST       shift, and go to state 4
    DOUBLE      shift, and go to state 5
    ENUM        shift, and go to state 6
    EXTERN      shift, and go to state 7
    FLOAT       shift, and go to state 8
    INLINE      shift, and go to state 9
    INT         shift, and go to state 10
    LONG        shift, and go to state 11
    REGISTER    shift, and go to state 12
    RESTRICT    shift, and go to state 13
    SHORT       shift, and go to state 14
    SIGNED      shift, and go to state 15
    STATIC      shift, and go to state 16
    STRUCT      shift, and go to state 17
    TYPEDEF     shift, and go to state 18
    UNION       shift, and go to state 19
    UNSIGNED    shift, and go to state 20
    VOID        shift, and go to state 21
    VOLATILE    shift, and go to state 22
    _BOOL       shift, and go to state 23
    _COMPLEX    shift, and go to state 24
    _IMAGINARY  shift, and go to state 25
    '*'         shift, and go to state 26
    '('         shift, and go to state 27

    declaration_or_fndef       go to state 28
    function_definition        go to state 29
    declaration                go to state 30
    declaration-specifiers     go to state 31
    storage-class-specifier    go to state 32
    type-specifier             go to state 33
    struct-or-union-specifier  go to state 34
    struct-or-union            go to state 35
    enum-specifier             go to state 36
    type-qualifier             go to state 37
    function-specifier         go to state 38
    declarator                 go to state 39
    direct-declarator          go to state 40
    pointer                    go to state 41


State 1

  147 direct-declarator: IDENT •

    $default  reduce using rule 147 (direct-declarator)


State 2

  101 storage-class-specifier: AUTO •

    $default  reduce using rule 101 (storage-class-specifier)


State 3

  104 type-specifier: CHAR •

    $default  reduce using rule 104 (type-specifier)


State 4

  141 type-qualifier: CONST •

    $default  reduce using rule 141 (type-qualifier)


State 5

  109 type-specifier: DOUBLE •

    $default  reduce using rule 109 (type-specifier)


State 6

  134 enum-specifier: ENUM • IDENT '{' enumerator-list '}'
  135               | ENUM • '{' enumerator-list ',' '}'
  136               | ENUM • IDENT

    IDENT  shift, and go to state 42
    '{'    shift, and go to state 43


State 7

   99 storage-class-specifier: EXTERN •

    $default  reduce using rule 99 (storage-class-specifier)


State 8

  108 type-specifier: FLOAT •

    $default  reduce using rule 108 (type-specifier)


State 9

  144 function-specifier: INLINE •

    $default  reduce using rule 144 (function-specifier)


State 10

  106 type-specifier: INT •

    $default  reduce using rule 106 (type-specifier)


State 11

  107 type-specifier: LONG •

    $default  reduce using rule 107 (type-specifier)


State 12

  102 storage-class-specifier: REGISTER •

    $default  reduce using rule 102 (storage-class-specifier)


State 13

  142 type-qualifier: RESTRICT •

    $default  reduce using rule 142 (type-qualifier)


State 14

  105 type-specifier: SHORT •

    $default  reduce using rule 105 (type-specifier)


State 15

  110 type-specifier: SIGNED •

    $default  reduce using rule 110 (type-specifier)


State 16

  100 storage-class-specifier: STATIC •

    $default  reduce using rule 100 (storage-class-specifier)


State 17

  120 struct-or-union: STRUCT •

    $default  reduce using rule 120 (struct-or-union)


State 18

   98 storage-class-specifier: TYPEDEF •

    $default  reduce using rule 98 (storage-class-specifier)


State 19

  121 struct-or-union: UNION •

    $default  reduce using rule 121 (struct-or-union)


State 20

  111 type-specifier: UNSIGNED •

    $default  reduce using rule 111 (type-specifier)


State 21

  103 type-specifier: VOID •

    $default  reduce using rule 103 (type-specifier)


State 22

  143 type-qualifier: VOLATILE •

    $default  reduce using rule 143 (type-qualifier)


State 23

  112 type-specifier: _BOOL •

    $default  reduce using rule 112 (type-specifier)


State 24

  113 type-specifier: _COMPLEX •

    $default  reduce using rule 113 (type-specifier)


State 25

  114 type-specifier: _IMAGINARY •

    $default  reduce using rule 114 (type-specifier)


State 26

  159 pointer: '*' •
  160        | '*' • type-qualifier-list
  161        | '*' • type-qualifier-list pointer
  162        | '*' • pointer

    CONST     shift, and go to state 4
    RESTRICT  shift, and go to state 13
    VOLATILE  shift, and go to state 22
    '*'       shift, and go to state 26

    $default  reduce using rule 159 (pointer)

    type-qualifier       go to state 44
    pointer              go to state 45
    type-qualifier-list  go to state 46


State 27

  148 direct-declarator: '(' • declarator ')'

    IDENT  shift, and go to state 1
    '*'    shift, and go to state 26
    '('    shift, and go to state 27

    declarator         go to state 47
    direct-declarator  go to state 40
    pointer            go to state 41


State 28

    0 $accept: declaration_or_fndef • $end

    $end  shift, and go to state 48


State 29

    2 declaration_or_fndef: function_definition •

    $default  reduce using rule 2 (declaration_or_fndef)


State 30

    1 declaration_or_fndef: declaration •

    $default  reduce using rule 1 (declaration_or_fndef)


State 31

   84 declaration: declaration-specifiers • init-declarator-list ';'
   85            | declaration-specifiers • ';'

    IDENT  shift, and go to state 1
    '*'    shift, and go to state 26
    '('    shift, and go to state 27
    ';'    shift, and go to state 49

    init-declarator-list  go to state 50
    init-declarator       go to state 51
    declarator            go to state 52
    direct-declarator     go to state 40
    pointer               go to state 41


State 32

   86 declaration-specifiers: storage-class-specifier • declaration-specifiers
   87                       | storage-class-specifier •

    AUTO        shift, and go to state 2
    CHAR        shift, and go to state 3
    CONST       shift, and go to state 4
    DOUBLE      shift, and go to state 5
    ENUM        shift, and go to state 6
    EXTERN      shift, and go to state 7
    FLOAT       shift, and go to state 8
    INLINE      shift, and go to state 9
    INT         shift, and go to state 10
    LONG        shift, and go to state 11
    REGISTER    shift, and go to state 12
    RESTRICT    shift, and go to state 13
    SHORT       shift, and go to state 14
    SIGNED      shift, and go to state 15
    STATIC      shift, and go to state 16
    STRUCT      shift, and go to state 17
    TYPEDEF     shift, and go to state 18
    UNION       shift, and go to state 19
    UNSIGNED    shift, and go to state 20
    VOID        shift, and go to state 21
    VOLATILE    shift, and go to state 22
    _BOOL       shift, and go to state 23
    _COMPLEX    shift, and go to state 24
    _IMAGINARY  shift, and go to state 25

    $default  reduce using rule 87 (declaration-specifiers)

    declaration-specifiers     go to state 53
    storage-class-specifier    go to state 32
    type-specifier             go to state 33
    struct-or-union-specifier  go to state 34
    struct-or-union            go to state 35
    enum-specifier             go to state 36
    type-qualifier             go to state 37
    function-specifier         go to state 38


State 33

   88 declaration-specifiers: type-specifier • declaration-specifiers
   89                       | type-specifier •

    AUTO        shift, and go to state 2
    CHAR        shift, and go to state 3
    CONST       shift, and go to state 4
    DOUBLE      shift, and go to state 5
    ENUM        shift, and go to state 6
    EXTERN      shift, and go to state 7
    FLOAT       shift, and go to state 8
    INLINE      shift, and go to state 9
    INT         shift, and go to state 10
    LONG        shift, and go to state 11
    REGISTER    shift, and go to state 12
    RESTRICT    shift, and go to state 13
    SHORT       shift, and go to state 14
    SIGNED      shift, and go to state 15
    STATIC      shift, and go to state 16
    STRUCT      shift, and go to state 17
    TYPEDEF     shift, and go to state 18
    UNION       shift, and go to state 19
    UNSIGNED    shift, and go to state 20
    VOID        shift, and go to state 21
    VOLATILE    shift, and go to state 22
    _BOOL       shift, and go to state 23
    _COMPLEX    shift, and go to state 24
    _IMAGINARY  shift, and go to state 25

    $default  reduce using rule 89 (declaration-specifiers)

    declaration-specifiers     go to state 54
    storage-class-specifier    go to state 32
    type-specifier             go to state 33
    struct-or-union-specifier  go to state 34
    struct-or-union            go to state 35
    enum-specifier             go to state 36
    type-qualifier             go to state 37
    function-specifier         go to state 38


State 34

  115 type-specifier: struct-or-union-specifier •

    $default  reduce using rule 115 (type-specifier)


State 35

  117 struct-or-union-specifier: struct-or-union • IDENT '{' struct-declaration-list '}'
  118                          | struct-or-union • '{' struct-declaration-list '}'
  119                          | struct-or-union • IDENT

    IDENT  shift, and go to state 55
    '{'    shift, and go to state 56


State 36

  116 type-specifier: enum-specifier •

    $default  reduce using rule 116 (type-specifier)


State 37

   90 declaration-specifiers: type-qualifier • declaration-specifiers
   91                       | type-qualifier •

    AUTO        shift, and go to state 2
    CHAR        shift, and go to state 3
    CONST       shift, and go to state 4
    DOUBLE      shift, and go to state 5
    ENUM        shift, and go to state 6
    EXTERN      shift, and go to state 7
    FLOAT       shift, and go to state 8
    INLINE      shift, and go to state 9
    INT         shift, and go to state 10
    LONG        shift, and go to state 11
    REGISTER    shift, and go to state 12
    RESTRICT    shift, and go to state 13
    SHORT       shift, and go to state 14
    SIGNED      shift, and go to state 15
    STATIC      shift, and go to state 16
    STRUCT      shift, and go to state 17
    TYPEDEF     shift, and go to state 18
    UNION       shift, and go to state 19
    UNSIGNED    shift, and go to state 20
    VOID        shift, and go to state 21
    VOLATILE    shift, and go to state 22
    _BOOL       shift, and go to state 23
    _COMPLEX    shift, and go to state 24
    _IMAGINARY  shift, and go to state 25

    $default  reduce using rule 91 (declaration-specifiers)

    declaration-specifiers     go to state 57
    storage-class-specifier    go to state 32
    type-specifier             go to state 33
    struct-or-union-specifier  go to state 34
    struct-or-union            go to state 35
    enum-specifier             go to state 36
    type-qualifier             go to state 37
    function-specifier         go to state 38


State 38

   92 declaration-specifiers: function-specifier • declaration-specifiers
   93                       | function-specifier •

    AUTO        shift, and go to state 2
    CHAR        shift, and go to state 3
    CONST       shift, and go to state 4
    DOUBLE      shift, and go to state 5
    ENUM        shift, and go to state 6
    EXTERN      shift, and go to state 7
    FLOAT       shift, and go to state 8
    INLINE      shift, and go to state 9
    INT         shift, and go to state 10
    LONG        shift, and go to state 11
    REGISTER    shift, and go to state 12
    RESTRICT    shift, and go to state 13
    SHORT       shift, and go to state 14
    SIGNED      shift, and go to state 15
    STATIC      shift, and go to state 16
    STRUCT      shift, and go to state 17
    TYPEDEF     shift, and go to state 18
    UNION       shift, and go to state 19
    UNSIGNED    shift, and go to state 20
    VOID        shift, and go to state 21
    VOLATILE    shift, and go to state 22
    _BOOL       shift, and go to state 23
    _COMPLEX    shift, and go to state 24
    _IMAGINARY  shift, and go to state 25

    $default  reduce using rule 93 (declaration-specifiers)

    declaration-specifiers     go to state 58
    storage-class-specifier    go to state 32
    type-specifier             go to state 33
    struct-or-union-specifier  go to state 34
    struct-or-union            go to state 35
    enum-specifier             go to state 36
    type-qualifier             go to state 37
    function-specifier         go to state 38


State 39

    3 function_definition: declarator • compound_statement

    '{'  shift, and go to state 59

    compound_statement  go to state 60


State 40

  146 declarator: direct-declarator •
  149 direct-declarator: direct-declarator • '[' type-qualifier-list assignment-expression ']'
  150                  | direct-declarator • '[' STATIC type-qualifier-list assignment-expression ']'
  151                  | direct-declarator • '[' STATIC assignment-expression ']'
  152                  | direct-declarator • '[' type-qualifier-list STATIC assignment-expression ']'
  153                  | direct-declarator • '[' type-qualifier-list '*' ']'
  154                  | direct-declarator • '[' '*' ']'
  155                  | direct-declarator • '[' ']'
  156                  | direct-declarator • '(' parameter-type-list ')'
  157                  | direct-declarator • '(' identifier-list ')'
  158                  | direct-declarator • '(' ')'

    '('  shift, and go to state 61
    '['  shift, and go to state 62

    $default  reduce using rule 146 (declarator)


State 41

  145 declarator: pointer • direct-declarator

    IDENT  shift, and go to state 1
    '('    shift, and go to state 27

    direct-declarator  go to state 63


State 42

  134 enum-specifier: ENUM IDENT • '{' enumerator-list '}'
  136               | ENUM IDENT •

    '{'  shift, and go to state 64

    $default  reduce using rule 136 (enum-specifier)


State 43

  135 enum-specifier: ENUM '{' • enumerator-list ',' '}'

    IDENT  shift, and go to state 65

    enumerator-list  go to state 66
    enumerator       go to state 67


State 44

  163 type-qualifier-list: type-qualifier •

    $default  reduce using rule 163 (type-qualifier-list)


State 45

  162 pointer: '*' pointer •

    $default  reduce using rule 162 (pointer)


State 46

  160 pointer: '*' type-qualifier-list •
  161        | '*' type-qualifier-list • pointer
  164 type-qualifier-list: type-qualifier-list • type-qualifier

    CONST     shift, and go to state 4
    RESTRICT  shift, and go to state 13
    VOLATILE  shift, and go to state 22
    '*'       shift, and go to state 26

    $default  reduce using rule 160 (pointer)

    type-qualifier  go to state 68
    pointer         go to state 69


State 47

  148 direct-declarator: '(' declarator • ')'

    ')'  shift, and go to state 70


State 48

    0 $accept: declaration_or_fndef $end •

    $default  accept


State 49

   85 declaration: declaration-specifiers ';' •

    $default  reduce using rule 85 (declaration)


State 50

   84 declaration: declaration-specifiers init-declarator-list • ';'
   95 init-declarator-list: init-declarator-list • ',' init-declarator

    ','  shift, and go to state 71
    ';'  shift, and go to state 72


State 51

   94 init-declarator-list: init-declarator •

    $default  reduce using rule 94 (init-declarator-list)


State 52

   96 init-declarator: declarator •
   97                | declarator • '=' initializer

    '='  shift, and go to state 73

    $default  reduce using rule 96 (init-declarator)


State 53

   86 declaration-specifiers: storage-class-specifier declaration-specifiers •

    $default  reduce using rule 86 (declaration-specifiers)


State 54

   88 declaration-specifiers: type-specifier declaration-specifiers •

    $default  reduce using rule 88 (declaration-specifiers)


State 55

  117 struct-or-union-specifier: struct-or-union IDENT • '{' struct-declaration-list '}'
  119                          | struct-or-union IDENT •

    '{'  shift, and go to state 74

    $default  reduce using rule 119 (struct-or-union-specifier)


State 56

  118 struct-or-union-specifier: struct-or-union '{' • struct-declaration-list '}'

    CHAR        shift, and go to state 3
    CONST       shift, and go to state 4
    DOUBLE      shift, and go to state 5
    ENUM        shift, and go to state 6
    FLOAT       shift, and go to state 8
    INT         shift, and go to state 10
    LONG        shift, and go to state 11
    RESTRICT    shift, and go to state 13
    SHORT       shift, and go to state 14
    SIGNED      shift, and go to state 15
    STRUCT      shift, and go to state 17
    UNION       shift, and go to state 19
    UNSIGNED    shift, and go to state 20
    VOID        shift, and go to state 21
    VOLATILE    shift, and go to state 22
    _BOOL       shift, and go to state 23
    _COMPLEX    shift, and go to state 24
    _IMAGINARY  shift, and go to state 25

    type-specifier             go to state 75
    struct-or-union-specifier  go to state 34
    struct-or-union            go to state 35
    struct-declaration-list    go to state 76
    struct-declaration         go to state 77
    specifier-qualifier-list   go to state 78
    enum-specifier             go to state 36
    type-qualifier             go to state 79


State 57

   90 declaration-specifiers: type-qualifier declaration-specifiers •

    $default  reduce using rule 90 (declaration-specifiers)


State 58

   92 declaration-specifiers: function-specifier declaration-specifiers •

    $default  reduce using rule 92 (declaration-specifiers)


State 59

    4 compound_statement: '{' • decl_or_stmt_list '}'

    IDENT       shift, and go to state 80
    CHARLIT     shift, and go to state 81
    STRING      shift, and go to state 82
    NUMBER      shift, and go to state 83
    PLUSPLUS    shift, and go to state 84
    MINUSMINUS  shift, and go to state 85
    AUTO        shift, and go to state 2
    CHAR        shift, and go to state 3
    CONST       shift, and go to state 4
    DOUBLE      shift, and go to state 5
    ENUM        shift, and go to state 6
    EXTERN      shift, and go to state 7
    FLOAT       shift, and go to state 8
    INLINE      shift, and go to state 9
    INT         shift, and go to state 10
    LONG        shift, and go to state 11
    REGISTER    shift, and go to state 12
    RESTRICT    shift, and go to state 13
    SHORT       shift, and go to state 14
    SIGNED      shift, and go to state 15
    SIZEOF      shift, and go to state 86
    STATIC      shift, and go to state 16
    STRUCT      shift, and go to state 17
    TYPEDEF     shift, and go to state 18
    UNION       shift, and go to state 19
    UNSIGNED    shift, and go to state 20
    VOID        shift, and go to state 21
    VOLATILE    shift, and go to state 22
    _BOOL       shift, and go to state 23
    _COMPLEX    shift, and go to state 24
    _IMAGINARY  shift, and go to state 25
    '!'         shift, and go to state 87
    '&'         shift, and go to state 88
    '*'         shift, and go to state 89
    '-'         shift, and go to state 90
    '+'         shift, and go to state 91
    '~'         shift, and go to state 92
    '('         shift, and go to state 93
    '{'         shift, and go to state 59

    compound_statement         go to state 94
    decl_or_stmt_list          go to state 95
    decl_or_stmt               go to state 96
    stmt                       go to state 97
    primary-expression         go to state 98
    postfix-expression         go to state 99
    unary-expression           go to state 100
    unary-operator             go to state 101
    cast-expression            go to state 102
    mult-expression            go to state 103
    add-expression             go to state 104
    shift-expression           go to state 105
    relational-expression      go to state 106
    equality-expression        go to state 107
    bitwise-or-expression      go to state 108
    bitwise-xor-expression     go to state 109
    bitwise-and-expression     go to state 110
    logical-or-expression      go to state 111
    logical-and-expression     go to state 112
    conditional-expression     go to state 113
    assignment-expression      go to state 114
    expression                 go to state 115
    declaration                go to state 116
    declaration-specifiers     go to state 31
    storage-class-specifier    go to state 32
    type-specifier             go to state 33
    struct-or-union-specifier  go to state 34
    struct-or-union            go to state 35
    enum-specifier             go to state 36
    type-qualifier             go to state 37
    function-specifier         go to state 38


State 60

    3 function_definition: declarator compound_statement •

    $default  reduce using rule 3 (function_definition)


State 61

  156 direct-declarator: direct-declarator '(' • parameter-type-list ')'
  157                  | direct-declarator '(' • identifier-list ')'
  158                  | direct-declarator '(' • ')'

    IDENT       shift, and go to state 117
    AUTO        shift, and go to state 2
    CHAR        shift, and go to state 3
    CONST       shift, and go to state 4
    DOUBLE      shift, and go to state 5
    ENUM        shift, and go to state 6
    EXTERN      shift, and go to state 7
    FLOAT       shift, and go to state 8
    INLINE      shift, and go to state 9
    INT         shift, and go to state 10
    LONG        shift, and go to state 11
    REGISTER    shift, and go to state 12
    RESTRICT    shift, and go to state 13
    SHORT       shift, and go to state 14
    SIGNED      shift, and go to state 15
    STATIC      shift, and go to state 16
    STRUCT      shift, and go to state 17
    TYPEDEF     shift, and go to state 18
    UNION       shift, and go to state 19
    UNSIGNED    shift, and go to state 20
    VOID        shift, and go to state 21
    VOLATILE    shift, and go to state 22
    _BOOL       shift, and go to state 23
    _COMPLEX    shift, and go to state 24
    _IMAGINARY  shift, and go to state 25
    ')'         shift, and go to state 118

    declaration-specifiers     go to state 119
    storage-class-specifier    go to state 32
    type-specifier             go to state 33
    struct-or-union-specifier  go to state 34
    struct-or-union            go to state 35
    enum-specifier             go to state 36
    type-qualifier             go to state 37
    function-specifier         go to state 38
    parameter-type-list        go to state 120
    parameter-list             go to state 121
    parameter-declaration      go to state 122
    identifier-list            go to state 123


State 62

  149 direct-declarator: direct-declarator '[' • type-qualifier-list assignment-expression ']'
  150                  | direct-declarator '[' • STATIC type-qualifier-list assignment-expression ']'
  151                  | direct-declarator '[' • STATIC assignment-expression ']'
  152                  | direct-declarator '[' • type-qualifier-list STATIC assignment-expression ']'
  153                  | direct-declarator '[' • type-qualifier-list '*' ']'
  154                  | direct-declarator '[' • '*' ']'
  155                  | direct-declarator '[' • ']'

    CONST     shift, and go to state 4
    RESTRICT  shift, and go to state 13
    STATIC    shift, and go to state 124
    VOLATILE  shift, and go to state 22
    '*'       shift, and go to state 125
    ']'       shift, and go to state 126

    type-qualifier       go to state 44
    type-qualifier-list  go to state 127


State 63

  145 declarator: pointer direct-declarator •
  149 direct-declarator: direct-declarator • '[' type-qualifier-list assignment-expression ']'
  150                  | direct-declarator • '[' STATIC type-qualifier-list assignment-expression ']'
  151                  | direct-declarator • '[' STATIC assignment-expression ']'
  152                  | direct-declarator • '[' type-qualifier-list STATIC assignment-expression ']'
  153                  | direct-declarator • '[' type-qualifier-list '*' ']'
  154                  | direct-declarator • '[' '*' ']'
  155                  | direct-declarator • '[' ']'
  156                  | direct-declarator • '(' parameter-type-list ')'
  157                  | direct-declarator • '(' identifier-list ')'
  158                  | direct-declarator • '(' ')'

    '('  shift, and go to state 61
    '['  shift, and go to state 62

    $default  reduce using rule 145 (declarator)


State 64

  134 enum-specifier: ENUM IDENT '{' • enumerator-list '}'

    IDENT  shift, and go to state 65

    enumerator-list  go to state 128
    enumerator       go to state 67


State 65

  139 enumerator: IDENT •
  140           | IDENT • '=' conditional-expression

    '='  shift, and go to state 129

    $default  reduce using rule 139 (enumerator)


State 66

  135 enum-specifier: ENUM '{' enumerator-list • ',' '}'
  138 enumerator-list: enumerator-list • ',' enumerator

    ','  shift, and go to state 130


State 67

  137 enumerator-list: enumerator •

    $default  reduce using rule 137 (enumerator-list)


State 68

  164 type-qualifier-list: type-qualifier-list type-qualifier •

    $default  reduce using rule 164 (type-qualifier-list)


State 69

  161 pointer: '*' type-qualifier-list pointer •

    $default  reduce using rule 161 (pointer)


State 70

  148 direct-declarator: '(' declarator ')' •

    $default  reduce using rule 148 (direct-declarator)


State 71

   95 init-declarator-list: init-declarator-list ',' • init-declarator

    IDENT  shift, and go to state 1
    '*'    shift, and go to state 26
    '('    shift, and go to state 27

    init-declarator    go to state 131
    declarator         go to state 52
    direct-declarator  go to state 40
    pointer            go to state 41


State 72

   84 declaration: declaration-specifiers init-declarator-list ';' •

    $default  reduce using rule 84 (declaration)


State 73

   97 init-declarator: declarator '=' • initializer

    IDENT       shift, and go to state 80
    CHARLIT     shift, and go to state 81
    STRING      shift, and go to state 82
    NUMBER      shift, and go to state 83
    PLUSPLUS    shift, and go to state 84
    MINUSMINUS  shift, and go to state 85
    SIZEOF      shift, and go to state 86
    '!'         shift, and go to state 87
    '&'         shift, and go to state 88
    '*'         shift, and go to state 89
    '-'         shift, and go to state 90
    '+'         shift, and go to state 91
    '~'         shift, and go to state 92
    '('         shift, and go to state 93
    '{'         shift, and go to state 132

    primary-expression      go to state 98
    postfix-expression      go to state 99
    unary-expression        go to state 100
    unary-operator          go to state 101
    cast-expression         go to state 102
    mult-expression         go to state 103
    add-expression          go to state 104
    shift-expression        go to state 105
    relational-expression   go to state 106
    equality-expression     go to state 107
    bitwise-or-expression   go to state 108
    bitwise-xor-expression  go to state 109
    bitwise-and-expression  go to state 110
    logical-or-expression   go to state 111
    logical-and-expression  go to state 112
    conditional-expression  go to state 113
    assignment-expression   go to state 133
    initializer             go to state 134


State 74

  117 struct-or-union-specifier: struct-or-union IDENT '{' • struct-declaration-list '}'

    CHAR        shift, and go to state 3
    CONST       shift, and go to state 4
    DOUBLE      shift, and go to state 5
    ENUM        shift, and go to state 6
    FLOAT       shift, and go to state 8
    INT         shift, and go to state 10
    LONG        shift, and go to state 11
    RESTRICT    shift, and go to state 13
    SHORT       shift, and go to state 14
    SIGNED      shift, and go to state 15
    STRUCT      shift, and go to state 17
    UNION       shift, and go to state 19
    UNSIGNED    shift, and go to state 20
    VOID        shift, and go to state 21
    VOLATILE    shift, and go to state 22
    _BOOL       shift, and go to state 23
    _COMPLEX    shift, and go to state 24
    _IMAGINARY  shift, and go to state 25

    type-specifier             go to state 75
    struct-or-union-specifier  go to state 34
    struct-or-union            go to state 35
    struct-declaration-list    go to state 135
    struct-declaration         go to state 77
    specifier-qualifier-list   go to state 78
    enum-specifier             go to state 36
    type-qualifier             go to state 79


State 75

  125 specifier-qualifier-list: type-specifier • specifier-qualifier-list
  126                         | type-specifier •

    CHAR        shift, and go to state 3
    CONST       shift, and go to state 4
    DOUBLE      shift, and go to state 5
    ENUM        shift, and go to state 6
    FLOAT       shift, and go to state 8
    INT         shift, and go to state 10
    LONG        shift, and go to state 11
    RESTRICT    shift, and go to state 13
    SHORT       shift, and go to state 14
    SIGNED      shift, and go to state 15
    STRUCT      shift, and go to state 17
    UNION       shift, and go to state 19
    UNSIGNED    shift, and go to state 20
    VOID        shift, and go to state 21
    VOLATILE    shift, and go to state 22
    _BOOL       shift, and go to state 23
    _COMPLEX    shift, and go to state 24
    _IMAGINARY  shift, and go to state 25

    $default  reduce using rule 126 (specifier-qualifier-list)

    type-specifier             go to state 75
    struct-or-union-specifier  go to state 34
    struct-or-union            go to state 35
    specifier-qualifier-list   go to state 136
    enum-specifier             go to state 36
    type-qualifier             go to state 79


State 76

  118 struct-or-union-specifier: struct-or-union '{' struct-declaration-list • '}'
  123 struct-declaration-list: struct-declaration-list • struct-declaration

    CHAR        shift, and go to state 3
    CONST       shift, and go to state 4
    DOUBLE      shift, and go to state 5
    ENUM        shift, and go to state 6
    FLOAT       shift, and go to state 8
    INT         shift, and go to state 10
    LONG        shift, and go to state 11
    RESTRICT    shift, and go to state 13
    SHORT       shift, and go to state 14
    SIGNED      shift, and go to state 15
    STRUCT      shift, and go to state 17
    UNION       shift, and go to state 19
    UNSIGNED    shift, and go to state 20
    VOID        shift, and go to state 21
    VOLATILE    shift, and go to state 22
    _BOOL       shift, and go to state 23
    _COMPLEX    shift, and go to state 24
    _IMAGINARY  shift, and go to state 25
    '}'         shift, and go to state 137

    type-specifier             go to state 75
    struct-or-union-specifier  go to state 34
    struct-or-union            go to state 35
    struct-declaration         go to state 138
    specifier-qualifier-list   go to state 78
    enum-specifier             go to state 36
    type-qualifier             go to state 79


State 77

  122 struct-declaration-list: struct-declaration •

    $default  reduce using rule 122 (struct-declaration-list)


State 78

  124 struct-declaration: specifier-qualifier-list • struct-declarator-list

    IDENT  shift, and go to state 1
    '*'    shift, and go to state 26
    '('    shift, and go to state 27
    ':'    shift, and go to state 139

    struct-declarator-list  go to state 140
    struct-declarator       go to state 141
    declarator              go to state 142
    direct-declarator       go to state 40
    pointer                 go to state 41


State 79

  127 specifier-qualifier-list: type-qualifier • specifier-qualifier-list
  128                         | type-qualifier •

    CHAR        shift, and go to state 3
    CONST       shift, and go to state 4
    DOUBLE      shift, and go to state 5
    ENUM        shift, and go to state 6
    FLOAT       shift, and go to state 8
    INT         shift, and go to state 10
    LONG        shift, and go to state 11
    RESTRICT    shift, and go to state 13
    SHORT       shift, and go to state 14
    SIGNED      shift, and go to state 15
    STRUCT      shift, and go to state 17
    UNION       shift, and go to state 19
    UNSIGNED    shift, and go to state 20
    VOID        shift, and go to state 21
    VOLATILE    shift, and go to state 22
    _BOOL       shift, and go to state 23
    _COMPLEX    shift, and go to state 24
    _IMAGINARY  shift, and go to state 25

    $default  reduce using rule 128 (specifier-qualifier-list)

    type-specifier             go to state 75
    struct-or-union-specifier  go to state 34
    struct-or-union            go to state 35
    specifier-qualifier-list   go to state 143
    enum-specifier             go to state 36
    type-qualifier             go to state 79


State 80

   11 primary-expression: IDENT •

    $default  reduce using rule 11 (primary-expression)


State 81

   14 primary-expression: CHARLIT •

    $default  reduce using rule 14 (primary-expression)


State 82

   13 primary-expression: STRING •

    $default  reduce using rule 13 (primary-expression)


State 83

   12 primary-expression: NUMBER •

    $default  reduce using rule 12 (primary-expression)


State 84

   27 unary-expression: PLUSPLUS • unary-expression

    IDENT       shift, and go to state 80
    CHARLIT     shift, and go to state 81
    STRING      shift, and go to state 82
    NUMBER      shift, and go to state 83
    PLUSPLUS    shift, and go to state 84
    MINUSMINUS  shift, and go to state 85
    SIZEOF      shift, and go to state 144
    '!'         shift, and go to state 87
    '&'         shift, and go to state 88
    '*'         shift, and go to state 89
    '-'         shift, and go to state 90
    '+'         shift, and go to state 91
    '~'         shift, and go to state 92
    '('         shift, and go to state 93

    primary-expression  go to state 98
    postfix-expression  go to state 99
    unary-expression    go to state 145
    unary-operator      go to state 101


State 85

   28 unary-expression: MINUSMINUS • unary-expression

    IDENT       shift, and go to state 80
    CHARLIT     shift, and go to state 81
    STRING      shift, and go to state 82
    NUMBER      shift, and go to state 83
    PLUSPLUS    shift, and go to state 84
    MINUSMINUS  shift, and go to state 85
    SIZEOF      shift, and go to state 144
    '!'         shift, and go to state 87
    '&'         shift, and go to state 88
    '*'         shift, and go to state 89
    '-'         shift, and go to state 90
    '+'         shift, and go to state 91
    '~'         shift, and go to state 92
    '('         shift, and go to state 93

    primary-expression  go to state 98
    postfix-expression  go to state 99
    unary-expression    go to state 146
    unary-operator      go to state 101


State 86

   30 unary-expression: SIZEOF • '(' expression ')'
   38 cast-expression: SIZEOF • '(' type-name ')'

    '('  shift, and go to state 147


State 87

   33 unary-operator: '!' •

    $default  reduce using rule 33 (unary-operator)


State 88

   35 unary-operator: '&' •

    $default  reduce using rule 35 (unary-operator)


State 89

   36 unary-operator: '*' •

    $default  reduce using rule 36 (unary-operator)


State 90

   31 unary-operator: '-' •

    $default  reduce using rule 31 (unary-operator)


State 91

   32 unary-operator: '+' •

    $default  reduce using rule 32 (unary-operator)


State 92

   34 unary-operator: '~' •

    $default  reduce using rule 34 (unary-operator)


State 93

   15 primary-expression: '(' • expression ')'

    IDENT       shift, and go to state 80
    CHARLIT     shift, and go to state 81
    STRING      shift, and go to state 82
    NUMBER      shift, and go to state 83
    PLUSPLUS    shift, and go to state 84
    MINUSMINUS  shift, and go to state 85
    SIZEOF      shift, and go to state 86
    '!'         shift, and go to state 87
    '&'         shift, and go to state 88
    '*'         shift, and go to state 89
    '-'         shift, and go to state 90
    '+'         shift, and go to state 91
    '~'         shift, and go to state 92
    '('         shift, and go to state 93

    primary-expression      go to state 98
    postfix-expression      go to state 99
    unary-expression        go to state 100
    unary-operator          go to state 101
    cast-expression         go to state 102
    mult-expression         go to state 103
    add-expression          go to state 104
    shift-expression        go to state 105
    relational-expression   go to state 106
    equality-expression     go to state 107
    bitwise-or-expression   go to state 108
    bitwise-xor-expression  go to state 109
    bitwise-and-expression  go to state 110
    logical-or-expression   go to state 111
    logical-and-expression  go to state 112
    conditional-expression  go to state 113
    assignment-expression   go to state 114
    expression              go to state 148


State 94

    9 stmt: compound_statement •

    $default  reduce using rule 9 (stmt)


State 95

    4 compound_statement: '{' decl_or_stmt_list • '}'
    6 decl_or_stmt_list: decl_or_stmt_list • decl_or_stmt

    IDENT       shift, and go to state 80
    CHARLIT     shift, and go to state 81
    STRING      shift, and go to state 82
    NUMBER      shift, and go to state 83
    PLUSPLUS    shift, and go to state 84
    MINUSMINUS  shift, and go to state 85
    AUTO        shift, and go to state 2
    CHAR        shift, and go to state 3
    CONST       shift, and go to state 4
    DOUBLE      shift, and go to state 5
    ENUM        shift, and go to state 6
    EXTERN      shift, and go to state 7
    FLOAT       shift, and go to state 8
    INLINE      shift, and go to state 9
    INT         shift, and go to state 10
    LONG        shift, and go to state 11
    REGISTER    shift, and go to state 12
    RESTRICT    shift, and go to state 13
    SHORT       shift, and go to state 14
    SIGNED      shift, and go to state 15
    SIZEOF      shift, and go to state 86
    STATIC      shift, and go to state 16
    STRUCT      shift, and go to state 17
    TYPEDEF     shift, and go to state 18
    UNION       shift, and go to state 19
    UNSIGNED    shift, and go to state 20
    VOID        shift, and go to state 21
    VOLATILE    shift, and go to state 22
    _BOOL       shift, and go to state 23
    _COMPLEX    shift, and go to state 24
    _IMAGINARY  shift, and go to state 25
    '!'         shift, and go to state 87
    '&'         shift, and go to state 88
    '*'         shift, and go to state 89
    '-'         shift, and go to state 90
    '+'         shift, and go to state 91
    '~'         shift, and go to state 92
    '('         shift, and go to state 93
    '{'         shift, and go to state 59
    '}'         shift, and go to state 149

    compound_statement         go to state 94
    decl_or_stmt               go to state 150
    stmt                       go to state 97
    primary-expression         go to state 98
    postfix-expression         go to state 99
    unary-expression           go to state 100
    unary-operator             go to state 101
    cast-expression            go to state 102
    mult-expression            go to state 103
    add-expression             go to state 104
    shift-expression           go to state 105
    relational-expression      go to state 106
    equality-expression        go to state 107
    bitwise-or-expression      go to state 108
    bitwise-xor-expression     go to state 109
    bitwise-and-expression     go to state 110
    logical-or-expression      go to state 111
    logical-and-expression     go to state 112
    conditional-expression     go to state 113
    assignment-expression      go to state 114
    expression                 go to state 115
    declaration                go to state 116
    declaration-specifiers     go to state 31
    storage-class-specifier    go to state 32
    type-specifier             go to state 33
    struct-or-union-specifier  go to state 34
    struct-or-union            go to state 35
    enum-specifier             go to state 36
    type-qualifier             go to state 37
    function-specifier         go to state 38


State 96

    5 decl_or_stmt_list: decl_or_stmt •

    $default  reduce using rule 5 (decl_or_stmt_list)


State 97

    8 decl_or_stmt: stmt •

    $default  reduce using rule 8 (decl_or_stmt)


State 98

   16 postfix-expression: primary-expression •

    $default  reduce using rule 16 (postfix-expression)


State 99

   17 postfix-expression: postfix-expression • '[' expression ']'
   18                   | postfix-expression • '.' IDENT
   19                   | postfix-expression • INDSEL IDENT
   20                   | postfix-expression • '(' expression-list ')'
   21                   | postfix-expression • '(' ')'
   22                   | postfix-expression • PLUSPLUS
   23                   | postfix-expression • MINUSMINUS
   26 unary-expression: postfix-expression •

    INDSEL      shift, and go to state 151
    PLUSPLUS    shift, and go to state 152
    MINUSMINUS  shift, and go to state 153
    '.'         shift, and go to state 154
    '('         shift, and go to state 155
    '['         shift, and go to state 156

    $default  reduce using rule 26 (unary-expression)


State 100

   37 cast-expression: unary-expression •
   70 assignment-expression: unary-expression • assignment-operator assignment-expression

    TIMESEQ  shift, and go to state 157
    DIVEQ    shift, and go to state 158
    MODEQ    shift, and go to state 159
    PLUSEQ   shift, and go to state 160
    MINUSEQ  shift, and go to state 161
    SHLEQ    shift, and go to state 162
    SHREQ    shift, and go to state 163
    ANDEQ    shift, and go to state 164
    OREQ     shift, and go to state 165
    XOREQ    shift, and go to state 166
    '='      shift, and go to state 167

    $default  reduce using rule 37 (cast-expression)

    assignment-operator  go to state 168


State 101

   29 unary-expression: unary-operator • cast-expression

    IDENT       shift, and go to state 80
    CHARLIT     shift, and go to state 81
    STRING      shift, and go to state 82
    NUMBER      shift, and go to state 83
    PLUSPLUS    shift, and go to state 84
    MINUSMINUS  shift, and go to state 85
    SIZEOF      shift, and go to state 86
    '!'         shift, and go to state 87
    '&'         shift, and go to state 88
    '*'         shift, and go to state 89
    '-'         shift, and go to state 90
    '+'         shift, and go to state 91
    '~'         shift, and go to state 92
    '('         shift, and go to state 93

    primary-expression  go to state 98
    postfix-expression  go to state 99
    unary-expression    go to state 169
    unary-operator      go to state 101
    cast-expression     go to state 170


State 102

   39 mult-expression: cast-expression •

    $default  reduce using rule 39 (mult-expression)


State 103

   40 mult-expression: mult-expression • '*' cast-expression
   41                | mult-expression • '/' cast-expression
   42                | mult-expression • '%' cast-expression
   43 add-expression: mult-expression •

    '*'  shift, and go to state 171
    '/'  shift, and go to state 172
    '%'  shift, and go to state 173

    $default  reduce using rule 43 (add-expression)


State 104

   44 add-expression: add-expression • '+' mult-expression
   45               | add-expression • '-' mult-expression
   46 shift-expression: add-expression •

    '-'  shift, and go to state 174
    '+'  shift, and go to state 175

    $default  reduce using rule 46 (shift-expression)


State 105

   47 shift-expression: shift-expression • SHL add-expression
   48                 | shift-expression • SHR add-expression
   49 relational-expression: shift-expression •

    SHL  shift, and go to state 176
    SHR  shift, and go to state 177

    $default  reduce using rule 49 (relational-expression)


State 106

   50 relational-expression: relational-expression • '<' shift-expression
   51                      | relational-expression • LTEQ shift-expression
   52                      | relational-expression • '>' shift-expression
   53                      | relational-expression • GTEQ shift-expression
   54 equality-expression: relational-expression •

    LTEQ  shift, and go to state 178
    GTEQ  shift, and go to state 179
    '<'   shift, and go to state 180
    '>'   shift, and go to state 181

    $default  reduce using rule 54 (equality-expression)


State 107

   55 equality-expression: equality-expression • EQEQ relational-expression
   56                    | equality-expression • NOTEQ relational-expression
   61 bitwise-and-expression: equality-expression •

    EQEQ   shift, and go to state 182
    NOTEQ  shift, and go to state 183

    $default  reduce using rule 61 (bitwise-and-expression)


State 108

   58 bitwise-or-expression: bitwise-or-expression • '|' bitwise-xor-expression
   65 logical-and-expression: bitwise-or-expression •

    '|'  shift, and go to state 184

    $default  reduce using rule 65 (logical-and-expression)


State 109

   57 bitwise-or-expression: bitwise-xor-expression •
   60 bitwise-xor-expression: bitwise-xor-expression • '^' bitwise-and-expression

    '^'  shift, and go to state 185

    $default  reduce using rule 57 (bitwise-or-expression)


State 110

   59 bitwise-xor-expression: bitwise-and-expression •
   62 bitwise-and-expression: bitwise-and-expression • '&' equality-expression

    '&'  shift, and go to state 186

    $default  reduce using rule 59 (bitwise-xor-expression)


State 111

   64 logical-or-expression: logical-or-expression • LOGOR logical-and-expression
   67 conditional-expression: logical-or-expression •
   68                       | logical-or-expression • '?' expression ':' conditional-expression

    LOGOR  shift, and go to state 187
    '?'    shift, and go to state 188

    $default  reduce using rule 67 (conditional-expression)


State 112

   63 logical-or-expression: logical-and-expression •
   66 logical-and-expression: logical-and-expression • LOGAND bitwise-or-expression

    LOGAND  shift, and go to state 189

    $default  reduce using rule 63 (logical-or-expression)


State 113

   69 assignment-expression: conditional-expression •

    $default  reduce using rule 69 (assignment-expression)


State 114

   82 expression: assignment-expression •

    $default  reduce using rule 82 (expression)


State 115

   10 stmt: expression • ';'
   83 expression: expression • ',' assignment-expression

    ','  shift, and go to state 190
    ';'  shift, and go to state 191


State 116

    7 decl_or_stmt: declaration •

    $default  reduce using rule 7 (decl_or_stmt)


State 117

  172 identifier-list: IDENT •

    $default  reduce using rule 172 (identifier-list)


State 118

  158 direct-declarator: direct-declarator '(' ')' •

    $default  reduce using rule 158 (direct-declarator)


State 119

  169 parameter-declaration: declaration-specifiers • declarator
  170                      | declaration-specifiers • abstract-declarator
  171                      | declaration-specifiers •

    IDENT  shift, and go to state 1
    '*'    shift, and go to state 26
    '('    shift, and go to state 192
    '['    shift, and go to state 193

    $default  reduce using rule 171 (parameter-declaration)

    declarator                  go to state 194
    direct-declarator           go to state 40
    pointer                     go to state 195
    abstract-declarator         go to state 196
    direct-abstract-declarator  go to state 197


State 120

  156 direct-declarator: direct-declarator '(' parameter-type-list • ')'

    ')'  shift, and go to state 198


State 121

  165 parameter-type-list: parameter-list •
  166                    | parameter-list • ',' ELLIPSIS
  168 parameter-list: parameter-list • ',' parameter-declaration

    ','  shift, and go to state 199

    $default  reduce using rule 165 (parameter-type-list)


State 122

  167 parameter-list: parameter-declaration •

    $default  reduce using rule 167 (parameter-list)


State 123

  157 direct-declarator: direct-declarator '(' identifier-list • ')'
  173 identifier-list: identifier-list • ',' IDENT

    ')'  shift, and go to state 200
    ','  shift, and go to state 201


State 124

  150 direct-declarator: direct-declarator '[' STATIC • type-qualifier-list assignment-expression ']'
  151                  | direct-declarator '[' STATIC • assignment-expression ']'

    IDENT       shift, and go to state 80
    CHARLIT     shift, and go to state 81
    STRING      shift, and go to state 82
    NUMBER      shift, and go to state 83
    PLUSPLUS    shift, and go to state 84
    MINUSMINUS  shift, and go to state 85
    CONST       shift, and go to state 4
    RESTRICT    shift, and go to state 13
    SIZEOF      shift, and go to state 86
    VOLATILE    shift, and go to state 22
    '!'         shift, and go to state 87
    '&'         shift, and go to state 88
    '*'         shift, and go to state 89
    '-'         shift, and go to state 90
    '+'         shift, and go to state 91
    '~'         shift, and go to state 92
    '('         shift, and go to state 93

    primary-expression      go to state 98
    postfix-expression      go to state 99
    unary-expression        go to state 100
    unary-operator          go to state 101
    cast-expression         go to state 102
    mult-expression         go to state 103
    add-expression          go to state 104
    shift-expression        go to state 105
    relational-expression   go to state 106
    equality-expression     go to state 107
    bitwise-or-expression   go to state 108
    bitwise-xor-expression  go to state 109
    bitwise-and-expression  go to state 110
    logical-or-expression   go to state 111
    logical-and-expression  go to state 112
    conditional-expression  go to state 113
    assignment-expression   go to state 202
    type-qualifier          go to state 44
    type-qualifier-list     go to state 203


State 125

  154 direct-declarator: direct-declarator '[' '*' • ']'

    ']'  shift, and go to state 204


State 126

  155 direct-declarator: direct-declarator '[' ']' •

    $default  reduce using rule 155 (direct-declarator)


State 127

  149 direct-declarator: direct-declarator '[' type-qualifier-list • assignment-expression ']'
  152                  | direct-declarator '[' type-qualifier-list • STATIC assignment-expression ']'
  153                  | direct-declarator '[' type-qualifier-list • '*' ']'
  164 type-qualifier-list: type-qualifier-list • type-qualifier

    IDENT       shift, and go to state 80
    CHARLIT     shift, and go to state 81
    STRING      shift, and go to state 82
    NUMBER      shift, and go to state 83
    PLUSPLUS    shift, and go to state 84
    MINUSMINUS  shift, and go to state 85
    CONST       shift, and go to state 4
    RESTRICT    shift, and go to state 13
    SIZEOF      shift, and go to state 86
    STATIC      shift, and go to state 205
    VOLATILE    shift, and go to state 22
    '!'         shift, and go to state 87
    '&'         shift, and go to state 88
    '*'         shift, and go to state 206
    '-'         shift, and go to state 90
    '+'         shift, and go to state 91
    '~'         shift, and go to state 92
    '('         shift, and go to state 93

    primary-expression      go to state 98
    postfix-expression      go to state 99
    unary-expression        go to state 100
    unary-operator          go to state 101
    cast-expression         go to state 102
    mult-expression         go to state 103
    add-expression          go to state 104
    shift-expression        go to state 105
    relational-expression   go to state 106
    equality-expression     go to state 107
    bitwise-or-expression   go to state 108
    bitwise-xor-expression  go to state 109
    bitwise-and-expression  go to state 110
    logical-or-expression   go to state 111
    logical-and-expression  go to state 112
    conditional-expression  go to state 113
    assignment-expression   go to state 207
    type-qualifier          go to state 68


State 128

  134 enum-specifier: ENUM IDENT '{' enumerator-list • '}'
  138 enumerator-list: enumerator-list • ',' enumerator

    '}'  shift, and go to state 208
    ','  shift, and go to state 209


State 129

  140 enumerator: IDENT '=' • conditional-expression

    IDENT       shift, and go to state 80
    CHARLIT     shift, and go to state 81
    STRING      shift, and go to state 82
    NUMBER      shift, and go to state 83
    PLUSPLUS    shift, and go to state 84
    MINUSMINUS  shift, and go to state 85
    SIZEOF      shift, and go to state 86
    '!'         shift, and go to state 87
    '&'         shift, and go to state 88
    '*'         shift, and go to state 89
    '-'         shift, and go to state 90
    '+'         shift, and go to state 91
    '~'         shift, and go to state 92
    '('         shift, and go to state 93

    primary-expression      go to state 98
    postfix-expression      go to state 99
    unary-expression        go to state 169
    unary-operator          go to state 101
    cast-expression         go to state 102
    mult-expression         go to state 103
    add-expression          go to state 104
    shift-expression        go to state 105
    relational-expression   go to state 106
    equality-expression     go to state 107
    bitwise-or-expression   go to state 108
    bitwise-xor-expression  go to state 109
    bitwise-and-expression  go to state 110
    logical-or-expression   go to state 111
    logical-and-expression  go to state 112
    conditional-expression  go to state 210


State 130

  135 enum-specifier: ENUM '{' enumerator-list ',' • '}'
  138 enumerator-list: enumerator-list ',' • enumerator

    IDENT  shift, and go to state 65
    '}'    shift, and go to state 211

    enumerator  go to state 212


State 131

   95 init-declarator-list: init-declarator-list ',' init-declarator •

    $default  reduce using rule 95 (init-declarator-list)


State 132

  189 initializer: '{' • initializer-list '}'
  190            | '{' • initializer ',' '}'

    IDENT       shift, and go to state 80
    CHARLIT     shift, and go to state 81
    STRING      shift, and go to state 82
    NUMBER      shift, and go to state 83
    PLUSPLUS    shift, and go to state 84
    MINUSMINUS  shift, and go to state 85
    SIZEOF      shift, and go to state 86
    '!'         shift, and go to state 87
    '&'         shift, and go to state 88
    '*'         shift, and go to state 89
    '-'         shift, and go to state 90
    '+'         shift, and go to state 91
    '~'         shift, and go to state 92
    '.'         shift, and go to state 213
    '('         shift, and go to state 93
    '['         shift, and go to state 214
    '{'         shift, and go to state 132

    primary-expression      go to state 98
    postfix-expression      go to state 99
    unary-expression        go to state 100
    unary-operator          go to state 101
    cast-expression         go to state 102
    mult-expression         go to state 103
    add-expression          go to state 104
    shift-expression        go to state 105
    relational-expression   go to state 106
    equality-expression     go to state 107
    bitwise-or-expression   go to state 108
    bitwise-xor-expression  go to state 109
    bitwise-and-expression  go to state 110
    logical-or-expression   go to state 111
    logical-and-expression  go to state 112
    conditional-expression  go to state 113
    assignment-expression   go to state 133
    initializer             go to state 215
    initializer-list        go to state 216
    designation             go to state 217
    designator-list         go to state 218
    designator              go to state 219


State 133

  188 initializer: assignment-expression •

    $default  reduce using rule 188 (initializer)


State 134

   97 init-declarator: declarator '=' initializer •

    $default  reduce using rule 97 (init-declarator)


State 135

  117 struct-or-union-specifier: struct-or-union IDENT '{' struct-declaration-list • '}'
  123 struct-declaration-list: struct-declaration-list • struct-declaration

    CHAR        shift, and go to state 3
    CONST       shift, and go to state 4
    DOUBLE      shift, and go to state 5
    ENUM        shift, and go to state 6
    FLOAT       shift, and go to state 8
    INT         shift, and go to state 10
    LONG        shift, and go to state 11
    RESTRICT    shift, and go to state 13
    SHORT       shift, and go to state 14
    SIGNED      shift, and go to state 15
    STRUCT      shift, and go to state 17
    UNION       shift, and go to state 19
    UNSIGNED    shift, and go to state 20
    VOID        shift, and go to state 21
    VOLATILE    shift, and go to state 22
    _BOOL       shift, and go to state 23
    _COMPLEX    shift, and go to state 24
    _IMAGINARY  shift, and go to state 25
    '}'         shift, and go to state 220

    type-specifier             go to state 75
    struct-or-union-specifier  go to state 34
    struct-or-union            go to state 35
    struct-declaration         go to state 138
    specifier-qualifier-list   go to state 78
    enum-specifier             go to state 36
    type-qualifier             go to state 79


State 136

  125 specifier-qualifier-list: type-specifier specifier-qualifier-list •

    $default  reduce using rule 125 (specifier-qualifier-list)


State 137

  118 struct-or-union-specifier: struct-or-union '{' struct-declaration-list '}' •

    $default  reduce using rule 118 (struct-or-union-specifier)


State 138

  123 struct-declaration-list: struct-declaration-list struct-declaration •

    $default  reduce using rule 123 (struct-declaration-list)


State 139

  133 struct-declarator: ':' • conditional-expression

    IDENT       shift, and go to state 80
    CHARLIT     shift, and go to state 81
    STRING      shift, and go to state 82
    NUMBER      shift, and go to state 83
    PLUSPLUS    shift, and go to state 84
    MINUSMINUS  shift, and go to state 85
    SIZEOF      shift, and go to state 86
    '!'         shift, and go to state 87
    '&'         shift, and go to state 88
    '*'         shift, and go to state 89
    '-'         shift, and go to state 90
    '+'         shift, and go to state 91
    '~'         shift, and go to state 92
    '('         shift, and go to state 93

    primary-expression      go to state 98
    postfix-expression      go to state 99
    unary-expression        go to state 169
    unary-operator          go to state 101
    cast-expression         go to state 102
    mult-expression         go to state 103
    add-expression          go to state 104
    shift-expression        go to state 105
    relational-expression   go to state 106
    equality-expression     go to state 107
    bitwise-or-expression   go to state 108
    bitwise-xor-expression  go to state 109
    bitwise-and-expression  go to state 110
    logical-or-expression   go to state 111
    logical-and-expression  go to state 112
    conditional-expression  go to state 221


State 140

  124 struct-declaration: specifier-qualifier-list struct-declarator-list •
  130 struct-declarator-list: struct-declarator-list • ',' struct-declarator

    ','  shift, and go to state 222

    $default  reduce using rule 124 (struct-declaration)


State 141

  129 struct-declarator-list: struct-declarator •

    $default  reduce using rule 129 (struct-declarator-list)


State 142

  131 struct-declarator: declarator •
  132                  | declarator • ':' conditional-expression

    ':'  shift, and go to state 223

    $default  reduce using rule 131 (struct-declarator)


State 143

  127 specifier-qualifier-list: type-qualifier specifier-qualifier-list •

    $default  reduce using rule 127 (specifier-qualifier-list)


State 144

   30 unary-expression: SIZEOF • '(' expression ')'

    '('  shift, and go to state 224


State 145

   27 unary-expression: PLUSPLUS unary-expression •

    $default  reduce using rule 27 (unary-expression)


State 146

   28 unary-expression: MINUSMINUS unary-expression •

    $default  reduce using rule 28 (unary-expression)


State 147

   30 unary-expression: SIZEOF '(' • expression ')'
   38 cast-expression: SIZEOF '(' • type-name ')'

    IDENT       shift, and go to state 80
    CHARLIT     shift, and go to state 81
    STRING      shift, and go to state 82
    NUMBER      shift, and go to state 83
    PLUSPLUS    shift, and go to state 84
    MINUSMINUS  shift, and go to state 85
    CHAR        shift, and go to state 3
    CONST       shift, and go to state 4
    DOUBLE      shift, and go to state 5
    ENUM        shift, and go to state 6
    FLOAT       shift, and go to state 8
    INT         shift, and go to state 10
    LONG        shift, and go to state 11
    RESTRICT    shift, and go to state 13
    SHORT       shift, and go to state 14
    SIGNED      shift, and go to state 15
    SIZEOF      shift, and go to state 86
    STRUCT      shift, and go to state 17
    UNION       shift, and go to state 19
    UNSIGNED    shift, and go to state 20
    VOID        shift, and go to state 21
    VOLATILE    shift, and go to state 22
    _BOOL       shift, and go to state 23
    _COMPLEX    shift, and go to state 24
    _IMAGINARY  shift, and go to state 25
    '!'         shift, and go to state 87
    '&'         shift, and go to state 88
    '*'         shift, and go to state 89
    '-'         shift, and go to state 90
    '+'         shift, and go to state 91
    '~'         shift, and go to state 92
    '('         shift, and go to state 93

    primary-expression         go to state 98
    postfix-expression         go to state 99
    unary-expression           go to state 100
    unary-operator             go to state 101
    cast-expression            go to state 102
    mult-expression            go to state 103
    add-expression             go to state 104
    shift-expression           go to state 105
    relational-expression      go to state 106
    equality-expression        go to state 107
    bitwise-or-expression      go to state 108
    bitwise-xor-expression     go to state 109
    bitwise-and-expression     go to state 110
    logical-or-expression      go to state 111
    logical-and-expression     go to state 112
    conditional-expression     go to state 113
    assignment-expression      go to state 114
    expression                 go to state 225
    type-specifier             go to state 75
    struct-or-union-specifier  go to state 34
    struct-or-union            go to state 35
    specifier-qualifier-list   go to state 226
    enum-specifier             go to state 36
    type-qualifier             go to state 79
    type-name                  go to state 227


State 148

   15 primary-expression: '(' expression • ')'
   83 expression: expression • ',' assignment-expression

    ')'  shift, and go to state 228
    ','  shift, and go to state 190


State 149

    4 compound_statement: '{' decl_or_stmt_list '}' •

    $default  reduce using rule 4 (compound_statement)


State 150

    6 decl_or_stmt_list: decl_or_stmt_list decl_or_stmt •

    $default  reduce using rule 6 (decl_or_stmt_list)


State 151

   19 postfix-expression: postfix-expression INDSEL • IDENT

    IDENT  shift, and go to state 229


State 152

   22 postfix-expression: postfix-expression PLUSPLUS •

    $default  reduce using rule 22 (postfix-expression)


State 153

   23 postfix-expression: postfix-expression MINUSMINUS •

    $default  reduce using rule 23 (postfix-expression)


State 154

   18 postfix-expression: postfix-expression '.' • IDENT

    IDENT  shift, and go to state 230


State 155

   20 postfix-expression: postfix-expression '(' • expression-list ')'
   21                   | postfix-expression '(' • ')'

    IDENT       shift, and go to state 80
    CHARLIT     shift, and go to state 81
    STRING      shift, and go to state 82
    NUMBER      shift, and go to state 83
    PLUSPLUS    shift, and go to state 84
    MINUSMINUS  shift, and go to state 85
    SIZEOF      shift, and go to state 86
    '!'         shift, and go to state 87
    '&'         shift, and go to state 88
    '*'         shift, and go to state 89
    '-'         shift, and go to state 90
    '+'         shift, and go to state 91
    '~'         shift, and go to state 92
    '('         shift, and go to state 93
    ')'         shift, and go to state 231

    primary-expression      go to state 98
    postfix-expression      go to state 99
    expression-list         go to state 232
    unary-expression        go to state 100
    unary-operator          go to state 101
    cast-expression         go to state 102
    mult-expression         go to state 103
    add-expression          go to state 104
    shift-expression        go to state 105
    relational-expression   go to state 106
    equality-expression     go to state 107
    bitwise-or-expression   go to state 108
    bitwise-xor-expression  go to state 109
    bitwise-and-expression  go to state 110
    logical-or-expression   go to state 111
    logical-and-expression  go to state 112
    conditional-expression  go to state 113
    assignment-expression   go to state 233


State 156

   17 postfix-expression: postfix-expression '[' • expression ']'

    IDENT       shift, and go to state 80
    CHARLIT     shift, and go to state 81
    STRING      shift, and go to state 82
    NUMBER      shift, and go to state 83
    PLUSPLUS    shift, and go to state 84
    MINUSMINUS  shift, and go to state 85
    SIZEOF      shift, and go to state 86
    '!'         shift, and go to state 87
    '&'         shift, and go to state 88
    '*'         shift, and go to state 89
    '-'         shift, and go to state 90
    '+'         shift, and go to state 91
    '~'         shift, and go to state 92
    '('         shift, and go to state 93

    primary-expression      go to state 98
    postfix-expression      go to state 99
    unary-expression        go to state 100
    unary-operator          go to state 101
    cast-expression         go to state 102
    mult-expression         go to state 103
    add-expression          go to state 104
    shift-expression        go to state 105
    relational-expression   go to state 106
    equality-expression     go to state 107
    bitwise-or-expression   go to state 108
    bitwise-xor-expression  go to state 109
    bitwise-and-expression  go to state 110
    logical-or-expression   go to state 111
    logical-and-expression  go to state 112
    conditional-expression  go to state 113
    assignment-expression   go to state 114
    expression              go to state 234


State 157

   74 assignment-operator: TIMESEQ •

    $default  reduce using rule 74 (assignment-operator)


State 158

   75 assignment-operator: DIVEQ •

    $default  reduce using rule 75 (assignment-operator)


State 159

   76 assignment-operator: MODEQ •

    $default  reduce using rule 76 (assignment-operator)


State 160

   72 assignment-operator: PLUSEQ •

    $default  reduce using rule 72 (assignment-operator)


State 161

   73 assignment-operator: MINUSEQ •

    $default  reduce using rule 73 (assignment-operator)


State 162

   77 assignment-operator: SHLEQ •

    $default  reduce using rule 77 (assignment-operator)


State 163

   78 assignment-operator: SHREQ •

    $default  reduce using rule 78 (assignment-operator)


State 164

   79 assignment-operator: ANDEQ •

    $default  reduce using rule 79 (assignment-operator)


State 165

   80 assignment-operator: OREQ •

    $default  reduce using rule 80 (assignment-operator)


State 166

   81 assignment-operator: XOREQ •

    $default  reduce using rule 81 (assignment-operator)


State 167

   71 assignment-operator: '=' •

    $default  reduce using rule 71 (assignment-operator)


State 168

   70 assignment-expression: unary-expression assignment-operator • assignment-expression

    IDENT       shift, and go to state 80
    CHARLIT     shift, and go to state 81
    STRING      shift, and go to state 82
    NUMBER      shift, and go to state 83
    PLUSPLUS    shift, and go to state 84
    MINUSMINUS  shift, and go to state 85
    SIZEOF      shift, and go to state 86
    '!'         shift, and go to state 87
    '&'         shift, and go to state 88
    '*'         shift, and go to state 89
    '-'         shift, and go to state 90
    '+'         shift, and go to state 91
    '~'         shift, and go to state 92
    '('         shift, and go to state 93

    primary-expression      go to state 98
    postfix-expression      go to state 99
    unary-expression        go to state 100
    unary-operator          go to state 101
    cast-expression         go to state 102
    mult-expression         go to state 103
    add-expression          go to state 104
    shift-expression        go to state 105
    relational-expression   go to state 106
    equality-expression     go to state 107
    bitwise-or-expression   go to state 108
    bitwise-xor-expression  go to state 109
    bitwise-and-expression  go to state 110
    logical-or-expression   go to state 111
    logical-and-expression  go to state 112
    conditional-expression  go to state 113
    assignment-expression   go to state 235


State 169

   37 cast-expression: unary-expression •

    $default  reduce using rule 37 (cast-expression)


State 170

   29 unary-expression: unary-operator cast-expression •

    $default  reduce using rule 29 (unary-expression)


State 171

   40 mult-expression: mult-expression '*' • cast-expression

    IDENT       shift, and go to state 80
    CHARLIT     shift, and go to state 81
    STRING      shift, and go to state 82
    NUMBER      shift, and go to state 83
    PLUSPLUS    shift, and go to state 84
    MINUSMINUS  shift, and go to state 85
    SIZEOF      shift, and go to state 86
    '!'         shift, and go to state 87
    '&'         shift, and go to state 88
    '*'         shift, and go to state 89
    '-'         shift, and go to state 90
    '+'         shift, and go to state 91
    '~'         shift, and go to state 92
    '('         shift, and go to state 93

    primary-expression  go to state 98
    postfix-expression  go to state 99
    unary-expression    go to state 169
    unary-operator      go to state 101
    cast-expression     go to state 236


State 172

   41 mult-expression: mult-expression '/' • cast-expression

    IDENT       shift, and go to state 80
    CHARLIT     shift, and go to state 81
    STRING      shift, and go to state 82
    NUMBER      shift, and go to state 83
    PLUSPLUS    shift, and go to state 84
    MINUSMINUS  shift, and go to state 85
    SIZEOF      shift, and go to state 86
    '!'         shift, and go to state 87
    '&'         shift, and go to state 88
    '*'         shift, and go to state 89
    '-'         shift, and go to state 90
    '+'         shift, and go to state 91
    '~'         shift, and go to state 92
    '('         shift, and go to state 93

    primary-expression  go to state 98
    postfix-expression  go to state 99
    unary-expression    go to state 169
    unary-operator      go to state 101
    cast-expression     go to state 237


State 173

   42 mult-expression: mult-expression '%' • cast-expression

    IDENT       shift, and go to state 80
    CHARLIT     shift, and go to state 81
    STRING      shift, and go to state 82
    NUMBER      shift, and go to state 83
    PLUSPLUS    shift, and go to state 84
    MINUSMINUS  shift, and go to state 85
    SIZEOF      shift, and go to state 86
    '!'         shift, and go to state 87
    '&'         shift, and go to state 88
    '*'         shift, and go to state 89
    '-'         shift, and go to state 90
    '+'         shift, and go to state 91
    '~'         shift, and go to state 92
    '('         shift, and go to state 93

    primary-expression  go to state 98
    postfix-expression  go to state 99
    unary-expression    go to state 169
    unary-operator      go to state 101
    cast-expression     go to state 238


State 174

   45 add-expression: add-expression '-' • mult-expression

    IDENT       shift, and go to state 80
    CHARLIT     shift, and go to state 81
    STRING      shift, and go to state 82
    NUMBER      shift, and go to state 83
    PLUSPLUS    shift, and go to state 84
    MINUSMINUS  shift, and go to state 85
    SIZEOF      shift, and go to state 86
    '!'         shift, and go to state 87
    '&'         shift, and go to state 88
    '*'         shift, and go to state 89
    '-'         shift, and go to state 90
    '+'         shift, and go to state 91
    '~'         shift, and go to state 92
    '('         shift, and go to state 93

    primary-expression  go to state 98
    postfix-expression  go to state 99
    unary-expression    go to state 169
    unary-operator      go to state 101
    cast-expression     go to state 102
    mult-expression     go to state 239


State 175

   44 add-expression: add-expression '+' • mult-expression

    IDENT       shift, and go to state 80
    CHARLIT     shift, and go to state 81
    STRING      shift, and go to state 82
    NUMBER      shift, and go to state 83
    PLUSPLUS    shift, and go to state 84
    MINUSMINUS  shift, and go to state 85
    SIZEOF      shift, and go to state 86
    '!'         shift, and go to state 87
    '&'         shift, and go to state 88
    '*'         shift, and go to state 89
    '-'         shift, and go to state 90
    '+'         shift, and go to state 91
    '~'         shift, and go to state 92
    '('         shift, and go to state 93

    primary-expression  go to state 98
    postfix-expression  go to state 99
    unary-expression    go to state 169
    unary-operator      go to state 101
    cast-expression     go to state 102
    mult-expression     go to state 240


State 176

   47 shift-expression: shift-expression SHL • add-expression

    IDENT       shift, and go to state 80
    CHARLIT     shift, and go to state 81
    STRING      shift, and go to state 82
    NUMBER      shift, and go to state 83
    PLUSPLUS    shift, and go to state 84
    MINUSMINUS  shift, and go to state 85
    SIZEOF      shift, and go to state 86
    '!'         shift, and go to state 87
    '&'         shift, and go to state 88
    '*'         shift, and go to state 89
    '-'         shift, and go to state 90
    '+'         shift, and go to state 91
    '~'         shift, and go to state 92
    '('         shift, and go to state 93

    primary-expression  go to state 98
    postfix-expression  go to state 99
    unary-expression    go to state 169
    unary-operator      go to state 101
    cast-expression     go to state 102
    mult-expression     go to state 103
    add-expression      go to state 241


State 177

   48 shift-expression: shift-expression SHR • add-expression

    IDENT       shift, and go to state 80
    CHARLIT     shift, and go to state 81
    STRING      shift, and go to state 82
    NUMBER      shift, and go to state 83
    PLUSPLUS    shift, and go to state 84
    MINUSMINUS  shift, and go to state 85
    SIZEOF      shift, and go to state 86
    '!'         shift, and go to state 87
    '&'         shift, and go to state 88
    '*'         shift, and go to state 89
    '-'         shift, and go to state 90
    '+'         shift, and go to state 91
    '~'         shift, and go to state 92
    '('         shift, and go to state 93

    primary-expression  go to state 98
    postfix-expression  go to state 99
    unary-expression    go to state 169
    unary-operator      go to state 101
    cast-expression     go to state 102
    mult-expression     go to state 103
    add-expression      go to state 242


State 178

   51 relational-expression: relational-expression LTEQ • shift-expression

    IDENT       shift, and go to state 80
    CHARLIT     shift, and go to state 81
    STRING      shift, and go to state 82
    NUMBER      shift, and go to state 83
    PLUSPLUS    shift, and go to state 84
    MINUSMINUS  shift, and go to state 85
    SIZEOF      shift, and go to state 86
    '!'         shift, and go to state 87
    '&'         shift, and go to state 88
    '*'         shift, and go to state 89
    '-'         shift, and go to state 90
    '+'         shift, and go to state 91
    '~'         shift, and go to state 92
    '('         shift, and go to state 93

    primary-expression  go to state 98
    postfix-expression  go to state 99
    unary-expression    go to state 169
    unary-operator      go to state 101
    cast-expression     go to state 102
    mult-expression     go to state 103
    add-expression      go to state 104
    shift-expression    go to state 243


State 179

   53 relational-expression: relational-expression GTEQ • shift-expression

    IDENT       shift, and go to state 80
    CHARLIT     shift, and go to state 81
    STRING      shift, and go to state 82
    NUMBER      shift, and go to state 83
    PLUSPLUS    shift, and go to state 84
    MINUSMINUS  shift, and go to state 85
    SIZEOF      shift, and go to state 86
    '!'         shift, and go to state 87
    '&'         shift, and go to state 88
    '*'         shift, and go to state 89
    '-'         shift, and go to state 90
    '+'         shift, and go to state 91
    '~'         shift, and go to state 92
    '('         shift, and go to state 93

    primary-expression  go to state 98
    postfix-expression  go to state 99
    unary-expression    go to state 169
    unary-operator      go to state 101
    cast-expression     go to state 102
    mult-expression     go to state 103
    add-expression      go to state 104
    shift-expression    go to state 244


State 180

   50 relational-expression: relational-expression '<' • shift-expression

    IDENT       shift, and go to state 80
    CHARLIT     shift, and go to state 81
    STRING      shift, and go to state 82
    NUMBER      shift, and go to state 83
    PLUSPLUS    shift, and go to state 84
    MINUSMINUS  shift, and go to state 85
    SIZEOF      shift, and go to state 86
    '!'         shift, and go to state 87
    '&'         shift, and go to state 88
    '*'         shift, and go to state 89
    '-'         shift, and go to state 90
    '+'         shift, and go to state 91
    '~'         shift, and go to state 92
    '('         shift, and go to state 93

    primary-expression  go to state 98
    postfix-expression  go to state 99
    unary-expression    go to state 169
    unary-operator      go to state 101
    cast-expression     go to state 102
    mult-expression     go to state 103
    add-expression      go to state 104
    shift-expression    go to state 245


State 181

   52 relational-expression: relational-expression '>' • shift-expression

    IDENT       shift, and go to state 80
    CHARLIT     shift, and go to state 81
    STRING      shift, and go to state 82
    NUMBER      shift, and go to state 83
    PLUSPLUS    shift, and go to state 84
    MINUSMINUS  shift, and go to state 85
    SIZEOF      shift, and go to state 86
    '!'         shift, and go to state 87
    '&'         shift, and go to state 88
    '*'         shift, and go to state 89
    '-'         shift, and go to state 90
    '+'         shift, and go to state 91
    '~'         shift, and go to state 92
    '('         shift, and go to state 93

    primary-expression  go to state 98
    postfix-expression  go to state 99
    unary-expression    go to state 169
    unary-operator      go to state 101
    cast-expression     go to state 102
    mult-expression     go to state 103
    add-expression      go to state 104
    shift-expression    go to state 246


State 182

   55 equality-expression: equality-expression EQEQ • relational-expression

    IDENT       shift, and go to state 80
    CHARLIT     shift, and go to state 81
    STRING      shift, and go to state 82
    NUMBER      shift, and go to state 83
    PLUSPLUS    shift, and go to state 84
    MINUSMINUS  shift, and go to state 85
    SIZEOF      shift, and go to state 86
    '!'         shift, and go to state 87
    '&'         shift, and go to state 88
    '*'         shift, and go to state 89
    '-'         shift, and go to state 90
    '+'         shift, and go to state 91
    '~'         shift, and go to state 92
    '('         shift, and go to state 93

    primary-expression     go to state 98
    postfix-expression     go to state 99
    unary-expression       go to state 169
    unary-operator         go to state 101
    cast-expression        go to state 102
    mult-expression        go to state 103
    add-expression         go to state 104
    shift-expression       go to state 105
    relational-expression  go to state 247


State 183

   56 equality-expression: equality-expression NOTEQ • relational-expression

    IDENT       shift, and go to state 80
    CHARLIT     shift, and go to state 81
    STRING      shift, and go to state 82
    NUMBER      shift, and go to state 83
    PLUSPLUS    shift, and go to state 84
    MINUSMINUS  shift, and go to state 85
    SIZEOF      shift, and go to state 86
    '!'         shift, and go to state 87
    '&'         shift, and go to state 88
    '*'         shift, and go to state 89
    '-'         shift, and go to state 90
    '+'         shift, and go to state 91
    '~'         shift, and go to state 92
    '('         shift, and go to state 93

    primary-expression     go to state 98
    postfix-expression     go to state 99
    unary-expression       go to state 169
    unary-operator         go to state 101
    cast-expression        go to state 102
    mult-expression        go to state 103
    add-expression         go to state 104
    shift-expression       go to state 105
    relational-expression  go to state 248


State 184

   58 bitwise-or-expression: bitwise-or-expression '|' • bitwise-xor-expression

    IDENT       shift, and go to state 80
    CHARLIT     shift, and go to state 81
    STRING      shift, and go to state 82
    NUMBER      shift, and go to state 83
    PLUSPLUS    shift, and go to state 84
    MINUSMINUS  shift, and go to state 85
    SIZEOF      shift, and go to state 86
    '!'         shift, and go to state 87
    '&'         shift, and go to state 88
    '*'         shift, and go to state 89
    '-'         shift, and go to state 90
    '+'         shift, and go to state 91
    '~'         shift, and go to state 92
    '('         shift, and go to state 93

    primary-expression      go to state 98
    postfix-expression      go to state 99
    unary-expression        go to state 169
    unary-operator          go to state 101
    cast-expression         go to state 102
    mult-expression         go to state 103
    add-expression          go to state 104
    shift-expression        go to state 105
    relational-expression   go to state 106
    equality-expression     go to state 107
    bitwise-xor-expression  go to state 249
    bitwise-and-expression  go to state 110


State 185

   60 bitwise-xor-expression: bitwise-xor-expression '^' • bitwise-and-expression

    IDENT       shift, and go to state 80
    CHARLIT     shift, and go to state 81
    STRING      shift, and go to state 82
    NUMBER      shift, and go to state 83
    PLUSPLUS    shift, and go to state 84
    MINUSMINUS  shift, and go to state 85
    SIZEOF      shift, and go to state 86
    '!'         shift, and go to state 87
    '&'         shift, and go to state 88
    '*'         shift, and go to state 89
    '-'         shift, and go to state 90
    '+'         shift, and go to state 91
    '~'         shift, and go to state 92
    '('         shift, and go to state 93

    primary-expression      go to state 98
    postfix-expression      go to state 99
    unary-expression        go to state 169
    unary-operator          go to state 101
    cast-expression         go to state 102
    mult-expression         go to state 103
    add-expression          go to state 104
    shift-expression        go to state 105
    relational-expression   go to state 106
    equality-expression     go to state 107
    bitwise-and-expression  go to state 250


State 186

   62 bitwise-and-expression: bitwise-and-expression '&' • equality-expression

    IDENT       shift, and go to state 80
    CHARLIT     shift, and go to state 81
    STRING      shift, and go to state 82
    NUMBER      shift, and go to state 83
    PLUSPLUS    shift, and go to state 84
    MINUSMINUS  shift, and go to state 85
    SIZEOF      shift, and go to state 86
    '!'         shift, and go to state 87
    '&'         shift, and go to state 88
    '*'         shift, and go to state 89
    '-'         shift, and go to state 90
    '+'         shift, and go to state 91
    '~'         shift, and go to state 92
    '('         shift, and go to state 93

    primary-expression     go to state 98
    postfix-expression     go to state 99
    unary-expression       go to state 169
    unary-operator         go to state 101
    cast-expression        go to state 102
    mult-expression        go to state 103
    add-expression         go to state 104
    shift-expression       go to state 105
    relational-expression  go to state 106
    equality-expression    go to state 251


State 187

   64 logical-or-expression: logical-or-expression LOGOR • logical-and-expression

    IDENT       shift, and go to state 80
    CHARLIT     shift, and go to state 81
    STRING      shift, and go to state 82
    NUMBER      shift, and go to state 83
    PLUSPLUS    shift, and go to state 84
    MINUSMINUS  shift, and go to state 85
    SIZEOF      shift, and go to state 86
    '!'         shift, and go to state 87
    '&'         shift, and go to state 88
    '*'         shift, and go to state 89
    '-'         shift, and go to state 90
    '+'         shift, and go to state 91
    '~'         shift, and go to state 92
    '('         shift, and go to state 93

    primary-expression      go to state 98
    postfix-expression      go to state 99
    unary-expression        go to state 169
    unary-operator          go to state 101
    cast-expression         go to state 102
    mult-expression         go to state 103
    add-expression          go to state 104
    shift-expression        go to state 105
    relational-expression   go to state 106
    equality-expression     go to state 107
    bitwise-or-expression   go to state 108
    bitwise-xor-expression  go to state 109
    bitwise-and-expression  go to state 110
    logical-and-expression  go to state 252


State 188

   68 conditional-expression: logical-or-expression '?' • expression ':' conditional-expression

    IDENT       shift, and go to state 80
    CHARLIT     shift, and go to state 81
    STRING      shift, and go to state 82
    NUMBER      shift, and go to state 83
    PLUSPLUS    shift, and go to state 84
    MINUSMINUS  shift, and go to state 85
    SIZEOF      shift, and go to state 86
    '!'         shift, and go to state 87
    '&'         shift, and go to state 88
    '*'         shift, and go to state 89
    '-'         shift, and go to state 90
    '+'         shift, and go to state 91
    '~'         shift, and go to state 92
    '('         shift, and go to state 93

    primary-expression      go to state 98
    postfix-expression      go to state 99
    unary-expression        go to state 100
    unary-operator          go to state 101
    cast-expression         go to state 102
    mult-expression         go to state 103
    add-expression          go to state 104
    shift-expression        go to state 105
    relational-expression   go to state 106
    equality-expression     go to state 107
    bitwise-or-expression   go to state 108
    bitwise-xor-expression  go to state 109
    bitwise-and-expression  go to state 110
    logical-or-expression   go to state 111
    logical-and-expression  go to state 112
    conditional-expression  go to state 113
    assignment-expression   go to state 114
    expression              go to state 253


State 189

   66 logical-and-expression: logical-and-expression LOGAND • bitwise-or-expression

    IDENT       shift, and go to state 80
    CHARLIT     shift, and go to state 81
    STRING      shift, and go to state 82
    NUMBER      shift, and go to state 83
    PLUSPLUS    shift, and go to state 84
    MINUSMINUS  shift, and go to state 85
    SIZEOF      shift, and go to state 86
    '!'         shift, and go to state 87
    '&'         shift, and go to state 88
    '*'         shift, and go to state 89
    '-'         shift, and go to state 90
    '+'         shift, and go to state 91
    '~'         shift, and go to state 92
    '('         shift, and go to state 93

    primary-expression      go to state 98
    postfix-expression      go to state 99
    unary-expression        go to state 169
    unary-operator          go to state 101
    cast-expression         go to state 102
    mult-expression         go to state 103
    add-expression          go to state 104
    shift-expression        go to state 105
    relational-expression   go to state 106
    equality-expression     go to state 107
    bitwise-or-expression   go to state 254
    bitwise-xor-expression  go to state 109
    bitwise-and-expression  go to state 110


State 190

   83 expression: expression ',' • assignment-expression

    IDENT       shift, and go to state 80
    CHARLIT     shift, and go to state 81
    STRING      shift, and go to state 82
    NUMBER      shift, and go to state 83
    PLUSPLUS    shift, and go to state 84
    MINUSMINUS  shift, and go to state 85
    SIZEOF      shift, and go to state 86
    '!'         shift, and go to state 87
    '&'         shift, and go to state 88
    '*'         shift, and go to state 89
    '-'         shift, and go to state 90
    '+'         shift, and go to state 91
    '~'         shift, and go to state 92
    '('         shift, and go to state 93

    primary-expression      go to state 98
    postfix-expression      go to state 99
    unary-expression        go to state 100
    unary-operator          go to state 101
    cast-expression         go to state 102
    mult-expression         go to state 103
    add-expression          go to state 104
    shift-expression        go to state 105
    relational-expression   go to state 106
    equality-expression     go to state 107
    bitwise-or-expression   go to state 108
    bitwise-xor-expression  go to state 109
    bitwise-and-expression  go to state 110
    logical-or-expression   go to state 111
    logical-and-expression  go to state 112
    conditional-expression  go to state 113
    assignment-expression   go to state 255


State 191

   10 stmt: expression ';' •

    $default  reduce using rule 10 (stmt)


State 192

  148 direct-declarator: '(' • declarator ')'
  179 direct-abstract-declarator: '(' • abstract-declarator ')'
  186                           | '(' • parameter-type-list ')'

    IDENT       shift, and go to state 1
    AUTO        shift, and go to state 2
    CHAR        shift, and go to state 3
    CONST       shift, and go to state 4
    DOUBLE      shift, and go to state 5
    ENUM        shift, and go to state 6
    EXTERN      shift, and go to state 7
    FLOAT       shift, and go to state 8
    INLINE      shift, and go to state 9
    INT         shift, and go to state 10
    LONG        shift, and go to state 11
    REGISTER    shift, and go to state 12
    RESTRICT    shift, and go to state 13
    SHORT       shift, and go to state 14
    SIGNED      shift, and go to state 15
    STATIC      shift, and go to state 16
    STRUCT      shift, and go to state 17
    TYPEDEF     shift, and go to state 18
    UNION       shift, and go to state 19
    UNSIGNED    shift, and go to state 20
    VOID        shift, and go to state 21
    VOLATILE    shift, and go to state 22
    _BOOL       shift, and go to state 23
    _COMPLEX    shift, and go to state 24
    _IMAGINARY  shift, and go to state 25
    '*'         shift, and go to state 26
    '('         shift, and go to state 192
    '['         shift, and go to state 193

    declaration-specifiers      go to state 119
    storage-class-specifier     go to state 32
    type-specifier              go to state 33
    struct-or-union-specifier   go to state 34
    struct-or-union             go to state 35
    enum-specifier              go to state 36
    type-qualifier              go to state 37
    function-specifier          go to state 38
    declarator                  go to state 47
    direct-declarator           go to state 40
    pointer                     go to state 195
    parameter-type-list         go to state 256
    parameter-list              go to state 121
    parameter-declaration       go to state 122
    abstract-declarator         go to state 257
    direct-abstract-declarator  go to state 197


State 193

  182 direct-abstract-declarator: '[' • assignment-expression ']'
  184                           | '[' • '*' ']'

    IDENT       shift, and go to state 80
    CHARLIT     shift, and go to state 81
    STRING      shift, and go to state 82
    NUMBER      shift, and go to state 83
    PLUSPLUS    shift, and go to state 84
    MINUSMINUS  shift, and go to state 85
    SIZEOF      shift, and go to state 86
    '!'         shift, and go to state 87
    '&'         shift, and go to state 88
    '*'         shift, and go to state 258
    '-'         shift, and go to state 90
    '+'         shift, and go to state 91
    '~'         shift, and go to state 92
    '('         shift, and go to state 93

    primary-expression      go to state 98
    postfix-expression      go to state 99
    unary-expression        go to state 100
    unary-operator          go to state 101
    cast-expression         go to state 102
    mult-expression         go to state 103
    add-expression          go to state 104
    shift-expression        go to state 105
    relational-expression   go to state 106
    equality-expression     go to state 107
    bitwise-or-expression   go to state 108
    bitwise-xor-expression  go to state 109
    bitwise-and-expression  go to state 110
    logical-or-expression   go to state 111
    logical-and-expression  go to state 112
    conditional-expression  go to state 113
    assignment-expression   go to state 259


State 194

  169 parameter-declaration: declaration-specifiers declarator •

    $default  reduce using rule 169 (parameter-declaration)


State 195

  145 declarator: pointer • direct-declarator
  176 abstract-declarator: pointer •
  177                    | pointer • direct-abstract-declarator

    IDENT  shift, and go to state 1
    '('    shift, and go to state 192
    '['    shift, and go to state 193

    $default  reduce using rule 176 (abstract-declarator)

    direct-declarator           go to state 63
    direct-abstract-declarator  go to state 260


State 196

  170 parameter-declaration: declaration-specifiers abstract-declarator •

    $default  reduce using rule 170 (parameter-declaration)


State 197

  178 abstract-declarator: direct-abstract-declarator •
  180 direct-abstract-declarator: direct-abstract-declarator • '[' assignment-expression ']'
  181                           | direct-abstract-declarator • '[' ']'
  183                           | direct-abstract-declarator • '[' '*' ']'
  185                           | direct-abstract-declarator • '(' parameter-type-list ')'
  187                           | direct-abstract-declarator • '(' ')'

    '('  shift, and go to state 261
    '['  shift, and go to state 262

    $default  reduce using rule 178 (abstract-declarator)


State 198

  156 direct-declarator: direct-declarator '(' parameter-type-list ')' •

    $default  reduce using rule 156 (direct-declarator)


State 199

  166 parameter-type-list: parameter-list ',' • ELLIPSIS
  168 parameter-list: parameter-list ',' • parameter-declaration

    ELLIPSIS    shift, and go to state 263
    AUTO        shift, and go to state 2
    CHAR        shift, and go to state 3
    CONST       shift, and go to state 4
    DOUBLE      shift, and go to state 5
    ENUM        shift, and go to state 6
    EXTERN      shift, and go to state 7
    FLOAT       shift, and go to state 8
    INLINE      shift, and go to state 9
    INT         shift, and go to state 10
    LONG        shift, and go to state 11
    REGISTER    shift, and go to state 12
    RESTRICT    shift, and go to state 13
    SHORT       shift, and go to state 14
    SIGNED      shift, and go to state 15
    STATIC      shift, and go to state 16
    STRUCT      shift, and go to state 17
    TYPEDEF     shift, and go to state 18
    UNION       shift, and go to state 19
    UNSIGNED    shift, and go to state 20
    VOID        shift, and go to state 21
    VOLATILE    shift, and go to state 22
    _BOOL       shift, and go to state 23
    _COMPLEX    shift, and go to state 24
    _IMAGINARY  shift, and go to state 25

    declaration-specifiers     go to state 119
    storage-class-specifier    go to state 32
    type-specifier             go to state 33
    struct-or-union-specifier  go to state 34
    struct-or-union            go to state 35
    enum-specifier             go to state 36
    type-qualifier             go to state 37
    function-specifier         go to state 38
    parameter-declaration      go to state 264


State 200

  157 direct-declarator: direct-declarator '(' identifier-list ')' •

    $default  reduce using rule 157 (direct-declarator)


State 201

  173 identifier-list: identifier-list ',' • IDENT

    IDENT  shift, and go to state 265


State 202

  151 direct-declarator: direct-declarator '[' STATIC assignment-expression • ']'

    ']'  shift, and go to state 266


State 203

  150 direct-declarator: direct-declarator '[' STATIC type-qualifier-list • assignment-expression ']'
  164 type-qualifier-list: type-qualifier-list • type-qualifier

    IDENT       shift, and go to state 80
    CHARLIT     shift, and go to state 81
    STRING      shift, and go to state 82
    NUMBER      shift, and go to state 83
    PLUSPLUS    shift, and go to state 84
    MINUSMINUS  shift, and go to state 85
    CONST       shift, and go to state 4
    RESTRICT    shift, and go to state 13
    SIZEOF      shift, and go to state 86
    VOLATILE    shift, and go to state 22
    '!'         shift, and go to state 87
    '&'         shift, and go to state 88
    '*'         shift, and go to state 89
    '-'         shift, and go to state 90
    '+'         shift, and go to state 91
    '~'         shift, and go to state 92
    '('         shift, and go to state 93

    primary-expression      go to state 98
    postfix-expression      go to state 99
    unary-expression        go to state 100
    unary-operator          go to state 101
    cast-expression         go to state 102
    mult-expression         go to state 103
    add-expression          go to state 104
    shift-expression        go to state 105
    relational-expression   go to state 106
    equality-expression     go to state 107
    bitwise-or-expression   go to state 108
    bitwise-xor-expression  go to state 109
    bitwise-and-expression  go to state 110
    logical-or-expression   go to state 111
    logical-and-expression  go to state 112
    conditional-expression  go to state 113
    assignment-expression   go to state 267
    type-qualifier          go to state 68


State 204

  154 direct-declarator: direct-declarator '[' '*' ']' •

    $default  reduce using rule 154 (direct-declarator)


State 205

  152 direct-declarator: direct-declarator '[' type-qualifier-list STATIC • assignment-expression ']'

    IDENT       shift, and go to state 80
    CHARLIT     shift, and go to state 81
    STRING      shift, and go to state 82
    NUMBER      shift, and go to state 83
    PLUSPLUS    shift, and go to state 84
    MINUSMINUS  shift, and go to state 85
    SIZEOF      shift, and go to state 86
    '!'         shift, and go to state 87
    '&'         shift, and go to state 88
    '*'         shift, and go to state 89
    '-'         shift, and go to state 90
    '+'         shift, and go to state 91
    '~'         shift, and go to state 92
    '('         shift, and go to state 93

    primary-expression      go to state 98
    postfix-expression      go to state 99
    unary-expression        go to state 100
    unary-operator          go to state 101
    cast-expression         go to state 102
    mult-expression         go to state 103
    add-expression          go to state 104
    shift-expression        go to state 105
    relational-expression   go to state 106
    equality-expression     go to state 107
    bitwise-or-expression   go to state 108
    bitwise-xor-expression  go to state 109
    bitwise-and-expression  go to state 110
    logical-or-expression   go to state 111
    logical-and-expression  go to state 112
    conditional-expression  go to state 113
    assignment-expression   go to state 268


State 206

   36 unary-operator: '*' •
  153 direct-declarator: direct-declarator '[' type-qualifier-list '*' • ']'

    ']'  shift, and go to state 269

    $default  reduce using rule 36 (unary-operator)


State 207

  149 direct-declarator: direct-declarator '[' type-qualifier-list assignment-expression • ']'

    ']'  shift, and go to state 270


State 208

  134 enum-specifier: ENUM IDENT '{' enumerator-list '}' •

    $default  reduce using rule 134 (enum-specifier)


State 209

  138 enumerator-list: enumerator-list ',' • enumerator

    IDENT  shift, and go to state 65

    enumerator  go to state 212


State 210

  140 enumerator: IDENT '=' conditional-expression •

    $default  reduce using rule 140 (enumerator)


State 211

  135 enum-specifier: ENUM '{' enumerator-list ',' '}' •

    $default  reduce using rule 135 (enum-specifier)


State 212

  138 enumerator-list: enumerator-list ',' enumerator •

    $default  reduce using rule 138 (enumerator-list)


State 213

  199 designator: '.' • IDENT

    IDENT  shift, and go to state 271


State 214

  198 designator: '[' • conditional-expression ']'

    IDENT       shift, and go to state 80
    CHARLIT     shift, and go to state 81
    STRING      shift, and go to state 82
    NUMBER      shift, and go to state 83
    PLUSPLUS    shift, and go to state 84
    MINUSMINUS  shift, and go to state 85
    SIZEOF      shift, and go to state 86
    '!'         shift, and go to state 87
    '&'         shift, and go to state 88
    '*'         shift, and go to state 89
    '-'         shift, and go to state 90
    '+'         shift, and go to state 91
    '~'         shift, and go to state 92
    '('         shift, and go to state 93

    primary-expression      go to state 98
    postfix-expression      go to state 99
    unary-expression        go to state 169
    unary-operator          go to state 101
    cast-expression         go to state 102
    mult-expression         go to state 103
    add-expression          go to state 104
    shift-expression        go to state 105
    relational-expression   go to state 106
    equality-expression     go to state 107
    bitwise-or-expression   go to state 108
    bitwise-xor-expression  go to state 109
    bitwise-and-expression  go to state 110
    logical-or-expression   go to state 111
    logical-and-expression  go to state 112
    conditional-expression  go to state 272


State 215

  190 initializer: '{' initializer • ',' '}'
  192 initializer-list: initializer •

    ','  shift, and go to state 273

    ','       [reduce using rule 192 (initializer-list)]
    $default  reduce using rule 192 (initializer-list)


State 216

  189 initializer: '{' initializer-list • '}'
  193 initializer-list: initializer-list • ',' designation initializer
  194                 | initializer-list • ',' initializer

    '}'  shift, and go to state 274
    ','  shift, and go to state 275


State 217

  191 initializer-list: designation • initializer

    IDENT       shift, and go to state 80
    CHARLIT     shift, and go to state 81
    STRING      shift, and go to state 82
    NUMBER      shift, and go to state 83
    PLUSPLUS    shift, and go to state 84
    MINUSMINUS  shift, and go to state 85
    SIZEOF      shift, and go to state 86
    '!'         shift, and go to state 87
    '&'         shift, and go to state 88
    '*'         shift, and go to state 89
    '-'         shift, and go to state 90
    '+'         shift, and go to state 91
    '~'         shift, and go to state 92
    '('         shift, and go to state 93
    '{'         shift, and go to state 132

    primary-expression      go to state 98
    postfix-expression      go to state 99
    unary-expression        go to state 100
    unary-operator          go to state 101
    cast-expression         go to state 102
    mult-expression         go to state 103
    add-expression          go to state 104
    shift-expression        go to state 105
    relational-expression   go to state 106
    equality-expression     go to state 107
    bitwise-or-expression   go to state 108
    bitwise-xor-expression  go to state 109
    bitwise-and-expression  go to state 110
    logical-or-expression   go to state 111
    logical-and-expression  go to state 112
    conditional-expression  go to state 113
    assignment-expression   go to state 133
    initializer             go to state 276


State 218

  195 designation: designator-list • '='
  197 designator-list: designator-list • designator

    '='  shift, and go to state 277
    '.'  shift, and go to state 213
    '['  shift, and go to state 214

    designator  go to state 278


State 219

  196 designator-list: designator •

    $default  reduce using rule 196 (designator-list)


State 220

  117 struct-or-union-specifier: struct-or-union IDENT '{' struct-declaration-list '}' •

    $default  reduce using rule 117 (struct-or-union-specifier)


State 221

  133 struct-declarator: ':' conditional-expression •

    $default  reduce using rule 133 (struct-declarator)


State 222

  130 struct-declarator-list: struct-declarator-list ',' • struct-declarator

    IDENT  shift, and go to state 1
    '*'    shift, and go to state 26
    '('    shift, and go to state 27
    ':'    shift, and go to state 139

    struct-declarator  go to state 279
    declarator         go to state 142
    direct-declarator  go to state 40
    pointer            go to state 41


State 223

  132 struct-declarator: declarator ':' • conditional-expression

    IDENT       shift, and go to state 80
    CHARLIT     shift, and go to state 81
    STRING      shift, and go to state 82
    NUMBER      shift, and go to state 83
    PLUSPLUS    shift, and go to state 84
    MINUSMINUS  shift, and go to state 85
    SIZEOF      shift, and go to state 86
    '!'         shift, and go to state 87
    '&'         shift, and go to state 88
    '*'         shift, and go to state 89
    '-'         shift, and go to state 90
    '+'         shift, and go to state 91
    '~'         shift, and go to state 92
    '('         shift, and go to state 93

    primary-expression      go to state 98
    postfix-expression      go to state 99
    unary-expression        go to state 169
    unary-operator          go to state 101
    cast-expression         go to state 102
    mult-expression         go to state 103
    add-expression          go to state 104
    shift-expression        go to state 105
    relational-expression   go to state 106
    equality-expression     go to state 107
    bitwise-or-expression   go to state 108
    bitwise-xor-expression  go to state 109
    bitwise-and-expression  go to state 110
    logical-or-expression   go to state 111
    logical-and-expression  go to state 112
    conditional-expression  go to state 280


State 224

   30 unary-expression: SIZEOF '(' • expression ')'

    IDENT       shift, and go to state 80
    CHARLIT     shift, and go to state 81
    STRING      shift, and go to state 82
    NUMBER      shift, and go to state 83
    PLUSPLUS    shift, and go to state 84
    MINUSMINUS  shift, and go to state 85
    SIZEOF      shift, and go to state 86
    '!'         shift, and go to state 87
    '&'         shift, and go to state 88
    '*'         shift, and go to state 89
    '-'         shift, and go to state 90
    '+'         shift, and go to state 91
    '~'         shift, and go to state 92
    '('         shift, and go to state 93

    primary-expression      go to state 98
    postfix-expression      go to state 99
    unary-expression        go to state 100
    unary-operator          go to state 101
    cast-expression         go to state 102
    mult-expression         go to state 103
    add-expression          go to state 104
    shift-expression        go to state 105
    relational-expression   go to state 106
    equality-expression     go to state 107
    bitwise-or-expression   go to state 108
    bitwise-xor-expression  go to state 109
    bitwise-and-expression  go to state 110
    logical-or-expression   go to state 111
    logical-and-expression  go to state 112
    conditional-expression  go to state 113
    assignment-expression   go to state 114
    expression              go to state 225


State 225

   30 unary-expression: SIZEOF '(' expression • ')'
   83 expression: expression • ',' assignment-expression

    ')'  shift, and go to state 281
    ','  shift, and go to state 190


State 226

  174 type-name: specifier-qualifier-list •
  175          | specifier-qualifier-list • abstract-declarator

    '*'  shift, and go to state 26
    '('  shift, and go to state 282
    '['  shift, and go to state 193

    $default  reduce using rule 174 (type-name)

    pointer                     go to state 283
    abstract-declarator         go to state 284
    direct-abstract-declarator  go to state 197


State 227

   38 cast-expression: SIZEOF '(' type-name • ')'

    ')'  shift, and go to state 285


State 228

   15 primary-expression: '(' expression ')' •

    $default  reduce using rule 15 (primary-expression)


State 229

   19 postfix-expression: postfix-expression INDSEL IDENT •

    $default  reduce using rule 19 (postfix-expression)


State 230

   18 postfix-expression: postfix-expression '.' IDENT •

    $default  reduce using rule 18 (postfix-expression)


State 231

   21 postfix-expression: postfix-expression '(' ')' •

    $default  reduce using rule 21 (postfix-expression)


State 232

   20 postfix-expression: postfix-expression '(' expression-list • ')'
   25 expression-list: expression-list • ',' assignment-expression

    ')'  shift, and go to state 286
    ','  shift, and go to state 287


State 233

   24 expression-list: assignment-expression •

    $default  reduce using rule 24 (expression-list)


State 234

   17 postfix-expression: postfix-expression '[' expression • ']'
   83 expression: expression • ',' assignment-expression

    ']'  shift, and go to state 288
    ','  shift, and go to state 190


State 235

   70 assignment-expression: unary-expression assignment-operator assignment-expression •

    $default  reduce using rule 70 (assignment-expression)


State 236

   40 mult-expression: mult-expression '*' cast-expression •

    $default  reduce using rule 40 (mult-expression)


State 237

   41 mult-expression: mult-expression '/' cast-expression •

    $default  reduce using rule 41 (mult-expression)


State 238

   42 mult-expression: mult-expression '%' cast-expression •

    $default  reduce using rule 42 (mult-expression)


State 239

   40 mult-expression: mult-expression • '*' cast-expression
   41                | mult-expression • '/' cast-expression
   42                | mult-expression • '%' cast-expression
   45 add-expression: add-expression '-' mult-expression •

    '*'  shift, and go to state 171
    '/'  shift, and go to state 172
    '%'  shift, and go to state 173

    $default  reduce using rule 45 (add-expression)


State 240

   40 mult-expression: mult-expression • '*' cast-expression
   41                | mult-expression • '/' cast-expression
   42                | mult-expression • '%' cast-expression
   44 add-expression: add-expression '+' mult-expression •

    '*'  shift, and go to state 171
    '/'  shift, and go to state 172
    '%'  shift, and go to state 173

    $default  reduce using rule 44 (add-expression)


State 241

   44 add-expression: add-expression • '+' mult-expression
   45               | add-expression • '-' mult-expression
   47 shift-expression: shift-expression SHL add-expression •

    '-'  shift, and go to state 174
    '+'  shift, and go to state 175

    $default  reduce using rule 47 (shift-expression)


State 242

   44 add-expression: add-expression • '+' mult-expression
   45               | add-expression • '-' mult-expression
   48 shift-expression: shift-expression SHR add-expression •

    '-'  shift, and go to state 174
    '+'  shift, and go to state 175

    $default  reduce using rule 48 (shift-expression)


State 243

   47 shift-expression: shift-expression • SHL add-expression
   48                 | shift-expression • SHR add-expression
   51 relational-expression: relational-expression LTEQ shift-expression •

    SHL  shift, and go to state 176
    SHR  shift, and go to state 177

    $default  reduce using rule 51 (relational-expression)


State 244

   47 shift-expression: shift-expression • SHL add-expression
   48                 | shift-expression • SHR add-expression
   53 relational-expression: relational-expression GTEQ shift-expression •

    SHL  shift, and go to state 176
    SHR  shift, and go to state 177

    $default  reduce using rule 53 (relational-expression)


State 245

   47 shift-expression: shift-expression • SHL add-expression
   48                 | shift-expression • SHR add-expression
   50 relational-expression: relational-expression '<' shift-expression •

    SHL  shift, and go to state 176
    SHR  shift, and go to state 177

    $default  reduce using rule 50 (relational-expression)


State 246

   47 shift-expression: shift-expression • SHL add-expression
   48                 | shift-expression • SHR add-expression
   52 relational-expression: relational-expression '>' shift-expression •

    SHL  shift, and go to state 176
    SHR  shift, and go to state 177

    $default  reduce using rule 52 (relational-expression)


State 247

   50 relational-expression: relational-expression • '<' shift-expression
   51                      | relational-expression • LTEQ shift-expression
   52                      | relational-expression • '>' shift-expression
   53                      | relational-expression • GTEQ shift-expression
   55 equality-expression: equality-expression EQEQ relational-expression •

    LTEQ  shift, and go to state 178
    GTEQ  shift, and go to state 179
    '<'   shift, and go to state 180
    '>'   shift, and go to state 181

    $default  reduce using rule 55 (equality-expression)


State 248

   50 relational-expression: relational-expression • '<' shift-expression
   51                      | relational-expression • LTEQ shift-expression
   52                      | relational-expression • '>' shift-expression
   53                      | relational-expression • GTEQ shift-expression
   56 equality-expression: equality-expression NOTEQ relational-expression •

    LTEQ  shift, and go to state 178
    GTEQ  shift, and go to state 179
    '<'   shift, and go to state 180
    '>'   shift, and go to state 181

    $default  reduce using rule 56 (equality-expression)


State 249

   58 bitwise-or-expression: bitwise-or-expression '|' bitwise-xor-expression •
   60 bitwise-xor-expression: bitwise-xor-expression • '^' bitwise-and-expression

    '^'  shift, and go to state 185

    $default  reduce using rule 58 (bitwise-or-expression)


State 250

   60 bitwise-xor-expression: bitwise-xor-expression '^' bitwise-and-expression •
   62 bitwise-and-expression: bitwise-and-expression • '&' equality-expression

    '&'  shift, and go to state 186

    $default  reduce using rule 60 (bitwise-xor-expression)


State 251

   55 equality-expression: equality-expression • EQEQ relational-expression
   56                    | equality-expression • NOTEQ relational-expression
   62 bitwise-and-expression: bitwise-and-expression '&' equality-expression •

    EQEQ   shift, and go to state 182
    NOTEQ  shift, and go to state 183

    $default  reduce using rule 62 (bitwise-and-expression)


State 252

   64 logical-or-expression: logical-or-expression LOGOR logical-and-expression •
   66 logical-and-expression: logical-and-expression • LOGAND bitwise-or-expression

    LOGAND  shift, and go to state 189

    $default  reduce using rule 64 (logical-or-expression)


State 253

   68 conditional-expression: logical-or-expression '?' expression • ':' conditional-expression
   83 expression: expression • ',' assignment-expression

    ','  shift, and go to state 190
    ':'  shift, and go to state 289


State 254

   58 bitwise-or-expression: bitwise-or-expression • '|' bitwise-xor-expression
   66 logical-and-expression: logical-and-expression LOGAND bitwise-or-expression •

    '|'  shift, and go to state 184

    $default  reduce using rule 66 (logical-and-expression)


State 255

   83 expression: expression ',' assignment-expression •

    $default  reduce using rule 83 (expression)


State 256

  186 direct-abstract-declarator: '(' parameter-type-list • ')'

    ')'  shift, and go to state 290


State 257

  179 direct-abstract-declarator: '(' abstract-declarator • ')'

    ')'  shift, and go to state 291


State 258

   36 unary-operator: '*' •
  184 direct-abstract-declarator: '[' '*' • ']'

    ']'  shift, and go to state 292

    $default  reduce using rule 36 (unary-operator)


State 259

  182 direct-abstract-declarator: '[' assignment-expression • ']'

    ']'  shift, and go to state 293


State 260

  177 abstract-declarator: pointer direct-abstract-declarator •
  180 direct-abstract-declarator: direct-abstract-declarator • '[' assignment-expression ']'
  181                           | direct-abstract-declarator • '[' ']'
  183                           | direct-abstract-declarator • '[' '*' ']'
  185                           | direct-abstract-declarator • '(' parameter-type-list ')'
  187                           | direct-abstract-declarator • '(' ')'

    '('  shift, and go to state 261
    '['  shift, and go to state 262

    $default  reduce using rule 177 (abstract-declarator)


State 261

  185 direct-abstract-declarator: direct-abstract-declarator '(' • parameter-type-list ')'
  187                           | direct-abstract-declarator '(' • ')'

    AUTO        shift, and go to state 2
    CHAR        shift, and go to state 3
    CONST       shift, and go to state 4
    DOUBLE      shift, and go to state 5
    ENUM        shift, and go to state 6
    EXTERN      shift, and go to state 7
    FLOAT       shift, and go to state 8
    INLINE      shift, and go to state 9
    INT         shift, and go to state 10
    LONG        shift, and go to state 11
    REGISTER    shift, and go to state 12
    RESTRICT    shift, and go to state 13
    SHORT       shift, and go to state 14
    SIGNED      shift, and go to state 15
    STATIC      shift, and go to state 16
    STRUCT      shift, and go to state 17
    TYPEDEF     shift, and go to state 18
    UNION       shift, and go to state 19
    UNSIGNED    shift, and go to state 20
    VOID        shift, and go to state 21
    VOLATILE    shift, and go to state 22
    _BOOL       shift, and go to state 23
    _COMPLEX    shift, and go to state 24
    _IMAGINARY  shift, and go to state 25
    ')'         shift, and go to state 294

    declaration-specifiers     go to state 119
    storage-class-specifier    go to state 32
    type-specifier             go to state 33
    struct-or-union-specifier  go to state 34
    struct-or-union            go to state 35
    enum-specifier             go to state 36
    type-qualifier             go to state 37
    function-specifier         go to state 38
    parameter-type-list        go to state 295
    parameter-list             go to state 121
    parameter-declaration      go to state 122


State 262

  180 direct-abstract-declarator: direct-abstract-declarator '[' • assignment-expression ']'
  181                           | direct-abstract-declarator '[' • ']'
  183                           | direct-abstract-declarator '[' • '*' ']'

    IDENT       shift, and go to state 80
    CHARLIT     shift, and go to state 81
    STRING      shift, and go to state 82
    NUMBER      shift, and go to state 83
    PLUSPLUS    shift, and go to state 84
    MINUSMINUS  shift, and go to state 85
    SIZEOF      shift, and go to state 86
    '!'         shift, and go to state 87
    '&'         shift, and go to state 88
    '*'         shift, and go to state 296
    '-'         shift, and go to state 90
    '+'         shift, and go to state 91
    '~'         shift, and go to state 92
    '('         shift, and go to state 93
    ']'         shift, and go to state 297

    primary-expression      go to state 98
    postfix-expression      go to state 99
    unary-expression        go to state 100
    unary-operator          go to state 101
    cast-expression         go to state 102
    mult-expression         go to state 103
    add-expression          go to state 104
    shift-expression        go to state 105
    relational-expression   go to state 106
    equality-expression     go to state 107
    bitwise-or-expression   go to state 108
    bitwise-xor-expression  go to state 109
    bitwise-and-expression  go to state 110
    logical-or-expression   go to state 111
    logical-and-expression  go to state 112
    conditional-expression  go to state 113
    assignment-expression   go to state 298


State 263

  166 parameter-type-list: parameter-list ',' ELLIPSIS •

    $default  reduce using rule 166 (parameter-type-list)


State 264

  168 parameter-list: parameter-list ',' parameter-declaration •

    $default  reduce using rule 168 (parameter-list)


State 265

  173 identifier-list: identifier-list ',' IDENT •

    $default  reduce using rule 173 (identifier-list)


State 266

  151 direct-declarator: direct-declarator '[' STATIC assignment-expression ']' •

    $default  reduce using rule 151 (direct-declarator)


State 267

  150 direct-declarator: direct-declarator '[' STATIC type-qualifier-list assignment-expression • ']'

    ']'  shift, and go to state 299


State 268

  152 direct-declarator: direct-declarator '[' type-qualifier-list STATIC assignment-expression • ']'

    ']'  shift, and go to state 300


State 269

  153 direct-declarator: direct-declarator '[' type-qualifier-list '*' ']' •

    $default  reduce using rule 153 (direct-declarator)


State 270

  149 direct-declarator: direct-declarator '[' type-qualifier-list assignment-expression ']' •

    $default  reduce using rule 149 (direct-declarator)


State 271

  199 designator: '.' IDENT •

    $default  reduce using rule 199 (designator)


State 272

  198 designator: '[' conditional-expression • ']'

    ']'  shift, and go to state 301


State 273

  190 initializer: '{' initializer ',' • '}'

    '}'  shift, and go to state 302


State 274

  189 initializer: '{' initializer-list '}' •

    $default  reduce using rule 189 (initializer)


State 275

  193 initializer-list: initializer-list ',' • designation initializer
  194                 | initializer-list ',' • initializer

    IDENT       shift, and go to state 80
    CHARLIT     shift, and go to state 81
    STRING      shift, and go to state 82
    NUMBER      shift, and go to state 83
    PLUSPLUS    shift, and go to state 84
    MINUSMINUS  shift, and go to state 85
    SIZEOF      shift, and go to state 86
    '!'         shift, and go to state 87
    '&'         shift, and go to state 88
    '*'         shift, and go to state 89
    '-'         shift, and go to state 90
    '+'         shift, and go to state 91
    '~'         shift, and go to state 92
    '.'         shift, and go to state 213
    '('         shift, and go to state 93
    '['         shift, and go to state 214
    '{'         shift, and go to state 132

    primary-expression      go to state 98
    postfix-expression      go to state 99
    unary-expression        go to state 100
    unary-operator          go to state 101
    cast-expression         go to state 102
    mult-expression         go to state 103
    add-expression          go to state 104
    shift-expression        go to state 105
    relational-expression   go to state 106
    equality-expression     go to state 107
    bitwise-or-expression   go to state 108
    bitwise-xor-expression  go to state 109
    bitwise-and-expression  go to state 110
    logical-or-expression   go to state 111
    logical-and-expression  go to state 112
    conditional-expression  go to state 113
    assignment-expression   go to state 133
    initializer             go to state 303
    designation             go to state 304
    designator-list         go to state 218
    designator              go to state 219


State 276

  191 initializer-list: designation initializer •

    $default  reduce using rule 191 (initializer-list)


State 277

  195 designation: designator-list '=' •

    $default  reduce using rule 195 (designation)


State 278

  197 designator-list: designator-list designator •

    $default  reduce using rule 197 (designator-list)


State 279

  130 struct-declarator-list: struct-declarator-list ',' struct-declarator •

    $default  reduce using rule 130 (struct-declarator-list)


State 280

  132 struct-declarator: declarator ':' conditional-expression •

    $default  reduce using rule 132 (struct-declarator)


State 281

   30 unary-expression: SIZEOF '(' expression ')' •

    $default  reduce using rule 30 (unary-expression)


State 282

  179 direct-abstract-declarator: '(' • abstract-declarator ')'
  186                           | '(' • parameter-type-list ')'

    AUTO        shift, and go to state 2
    CHAR        shift, and go to state 3
    CONST       shift, and go to state 4
    DOUBLE      shift, and go to state 5
    ENUM        shift, and go to state 6
    EXTERN      shift, and go to state 7
    FLOAT       shift, and go to state 8
    INLINE      shift, and go to state 9
    INT         shift, and go to state 10
    LONG        shift, and go to state 11
    REGISTER    shift, and go to state 12
    RESTRICT    shift, and go to state 13
    SHORT       shift, and go to state 14
    SIGNED      shift, and go to state 15
    STATIC      shift, and go to state 16
    STRUCT      shift, and go to state 17
    TYPEDEF     shift, and go to state 18
    UNION       shift, and go to state 19
    UNSIGNED    shift, and go to state 20
    VOID        shift, and go to state 21
    VOLATILE    shift, and go to state 22
    _BOOL       shift, and go to state 23
    _COMPLEX    shift, and go to state 24
    _IMAGINARY  shift, and go to state 25
    '*'         shift, and go to state 26
    '('         shift, and go to state 282
    '['         shift, and go to state 193

    declaration-specifiers      go to state 119
    storage-class-specifier     go to state 32
    type-specifier              go to state 33
    struct-or-union-specifier   go to state 34
    struct-or-union             go to state 35
    enum-specifier              go to state 36
    type-qualifier              go to state 37
    function-specifier          go to state 38
    pointer                     go to state 283
    parameter-type-list         go to state 256
    parameter-list              go to state 121
    parameter-declaration       go to state 122
    abstract-declarator         go to state 257
    direct-abstract-declarator  go to state 197


State 283

  176 abstract-declarator: pointer •
  177                    | pointer • direct-abstract-declarator

    '('  shift, and go to state 282
    '['  shift, and go to state 193

    $default  reduce using rule 176 (abstract-declarator)

    direct-abstract-declarator  go to state 260


State 284

  175 type-name: specifier-qualifier-list abstract-declarator •

    $default  reduce using rule 175 (type-name)


State 285

   38 cast-expression: SIZEOF '(' type-name ')' •

    $default  reduce using rule 38 (cast-expression)


State 286

   20 postfix-expression: postfix-expression '(' expression-list ')' •

    $default  reduce using rule 20 (postfix-expression)


State 287

   25 expression-list: expression-list ',' • assignment-expression

    IDENT       shift, and go to state 80
    CHARLIT     shift, and go to state 81
    STRING      shift, and go to state 82
    NUMBER      shift, and go to state 83
    PLUSPLUS    shift, and go to state 84
    MINUSMINUS  shift, and go to state 85
    SIZEOF      shift, and go to state 86
    '!'         shift, and go to state 87
    '&'         shift, and go to state 88
    '*'         shift, and go to state 89
    '-'         shift, and go to state 90
    '+'         shift, and go to state 91
    '~'         shift, and go to state 92
    '('         shift, and go to state 93

    primary-expression      go to state 98
    postfix-expression      go to state 99
    unary-expression        go to state 100
    unary-operator          go to state 101
    cast-expression         go to state 102
    mult-expression         go to state 103
    add-expression          go to state 104
    shift-expression        go to state 105
    relational-expression   go to state 106
    equality-expression     go to state 107
    bitwise-or-expression   go to state 108
    bitwise-xor-expression  go to state 109
    bitwise-and-expression  go to state 110
    logical-or-expression   go to state 111
    logical-and-expression  go to state 112
    conditional-expression  go to state 113
    assignment-expression   go to state 305


State 288

   17 postfix-expression: postfix-expression '[' expression ']' •

    $default  reduce using rule 17 (postfix-expression)


State 289

   68 conditional-expression: logical-or-expression '?' expression ':' • conditional-expression

    IDENT       shift, and go to state 80
    CHARLIT     shift, and go to state 81
    STRING      shift, and go to state 82
    NUMBER      shift, and go to state 83
    PLUSPLUS    shift, and go to state 84
    MINUSMINUS  shift, and go to state 85
    SIZEOF      shift, and go to state 86
    '!'         shift, and go to state 87
    '&'         shift, and go to state 88
    '*'         shift, and go to state 89
    '-'         shift, and go to state 90
    '+'         shift, and go to state 91
    '~'         shift, and go to state 92
    '('         shift, and go to state 93

    primary-expression      go to state 98
    postfix-expression      go to state 99
    unary-expression        go to state 169
    unary-operator          go to state 101
    cast-expression         go to state 102
    mult-expression         go to state 103
    add-expression          go to state 104
    shift-expression        go to state 105
    relational-expression   go to state 106
    equality-expression     go to state 107
    bitwise-or-expression   go to state 108
    bitwise-xor-expression  go to state 109
    bitwise-and-expression  go to state 110
    logical-or-expression   go to state 111
    logical-and-expression  go to state 112
    conditional-expression  go to state 306


State 290

  186 direct-abstract-declarator: '(' parameter-type-list ')' •

    $default  reduce using rule 186 (direct-abstract-declarator)


State 291

  179 direct-abstract-declarator: '(' abstract-declarator ')' •

    $default  reduce using rule 179 (direct-abstract-declarator)


State 292

  184 direct-abstract-declarator: '[' '*' ']' •

    $default  reduce using rule 184 (direct-abstract-declarator)


State 293

  182 direct-abstract-declarator: '[' assignment-expression ']' •

    $default  reduce using rule 182 (direct-abstract-declarator)


State 294

  187 direct-abstract-declarator: direct-abstract-declarator '(' ')' •

    $default  reduce using rule 187 (direct-abstract-declarator)


State 295

  185 direct-abstract-declarator: direct-abstract-declarator '(' parameter-type-list • ')'

    ')'  shift, and go to state 307


State 296

   36 unary-operator: '*' •
  183 direct-abstract-declarator: direct-abstract-declarator '[' '*' • ']'

    ']'  shift, and go to state 308

    $default  reduce using rule 36 (unary-operator)


State 297

  181 direct-abstract-declarator: direct-abstract-declarator '[' ']' •

    $default  reduce using rule 181 (direct-abstract-declarator)


State 298

  180 direct-abstract-declarator: direct-abstract-declarator '[' assignment-expression • ']'

    ']'  shift, and go to state 309


State 299

  150 direct-declarator: direct-declarator '[' STATIC type-qualifier-list assignment-expression ']' •

    $default  reduce using rule 150 (direct-declarator)


State 300

  152 direct-declarator: direct-declarator '[' type-qualifier-list STATIC assignment-expression ']' •

    $default  reduce using rule 152 (direct-declarator)


State 301

  198 designator: '[' conditional-expression ']' •

    $default  reduce using rule 198 (designator)


State 302

  190 initializer: '{' initializer ',' '}' •

    $default  reduce using rule 190 (initializer)


State 303

  194 initializer-list: initializer-list ',' initializer •

    $default  reduce using rule 194 (initializer-list)


State 304

  193 initializer-list: initializer-list ',' designation • initializer

    IDENT       shift, and go to state 80
    CHARLIT     shift, and go to state 81
    STRING      shift, and go to state 82
    NUMBER      shift, and go to state 83
    PLUSPLUS    shift, and go to state 84
    MINUSMINUS  shift, and go to state 85
    SIZEOF      shift, and go to state 86
    '!'         shift, and go to state 87
    '&'         shift, and go to state 88
    '*'         shift, and go to state 89
    '-'         shift, and go to state 90
    '+'         shift, and go to state 91
    '~'         shift, and go to state 92
    '('         shift, and go to state 93
    '{'         shift, and go to state 132

    primary-expression      go to state 98
    postfix-expression      go to state 99
    unary-expression        go to state 100
    unary-operator          go to state 101
    cast-expression         go to state 102
    mult-expression         go to state 103
    add-expression          go to state 104
    shift-expression        go to state 105
    relational-expression   go to state 106
    equality-expression     go to state 107
    bitwise-or-expression   go to state 108
    bitwise-xor-expression  go to state 109
    bitwise-and-expression  go to state 110
    logical-or-expression   go to state 111
    logical-and-expression  go to state 112
    conditional-expression  go to state 113
    assignment-expression   go to state 133
    initializer             go to state 310


State 305

   25 expression-list: expression-list ',' assignment-expression •

    $default  reduce using rule 25 (expression-list)


State 306

   68 conditional-expression: logical-or-expression '?' expression ':' conditional-expression •

    $default  reduce using rule 68 (conditional-expression)


State 307

  185 direct-abstract-declarator: direct-abstract-declarator '(' parameter-type-list ')' •

    $default  reduce using rule 185 (direct-abstract-declarator)


State 308

  183 direct-abstract-declarator: direct-abstract-declarator '[' '*' ']' •

    $default  reduce using rule 183 (direct-abstract-declarator)


State 309

  180 direct-abstract-declarator: direct-abstract-declarator '[' assignment-expression ']' •

    $default  reduce using rule 180 (direct-abstract-declarator)


State 310

  193 initializer-list: initializer-list ',' designation initializer •

    $default  reduce using rule 193 (initializer-list)
